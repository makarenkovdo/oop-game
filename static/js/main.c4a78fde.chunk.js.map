{"version":3,"sources":["components/ItemModel.jsx","classes/items/baseItem.js","app/hooks.ts","redux/gameSlice.ts","containers/itemContainer.jsx","classes/items/proxyItem.js","containers/itemInit.jsx","classes/bots/baseBotClass.js","classes/bots/botFactories/jumperFactory.js","classes/bots/botFactories/moversFactory.js","classes/bots/botFactories/shootersFactory.js","classes/bots/abstractBotFactory.js","classes/bots/command.js","classes/bots/forms/baseForms.js","classes/bots/forms/formsFactory.js","classes/bots/strategies/moveEightDirections.js","classes/bots/strategies/moveFourDirections.js","classes/bots/strategies/moveLeft.js","classes/bots/strategies/moveRandom.js","classes/bots/strategyFactories/bulletStrategyFactory.js","classes/bots/strategyFactories/jumperStrategyFactory.js","classes/bots/strategyFactories/moverStrategyFactory.js","classes/bots/strategies/stand.js","classes/bots/strategyFactories/shooterStrategyFactory.js","classes/bots/strategyFactories/abstractStrategyFactory.js","classes/bots/facade.js","classes/bots/decorators/boosterDecorator.js","classes/collisionChecker.js","components/BotModel.jsx","containers/botContainer.js","containers/botInit.js","classes/saveLoad.js","components/Header.jsx","components/GameArea.jsx","classes/hero.js","components/HeroModel.jsx","components/GameOverModal.jsx","containers/game.jsx","containers/heroInit.jsx","containers/collisionCheckerContainer.js","App.jsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["ItemModel","props","className","style","top","position","left","borderColor","color","width","size","height","React","memo","BaseItem","this","Math","ceil","random","window","screen","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","startStatus","difficultyStatus","heroName","level","gameOverStatus","heroPosition","botPosition","bot2Position","heroSize","itemSize","bot2Size","botSize","bulletPosition","bulletState","bulletSize","exitPosition","keyPosition","boosterPosition","pauseStatus","saveStatus","boosterStatus","keyForExit","gameSlice","createSlice","name","reducers","difficultyStatusAction","state","action","payload","heroNameAction","startStatusAction","levelUpAction","gameOverAction","saveAction","pauseStatusAction","keyForExitAction","boosterStatusAction","heroMoveAction","heroSizeInitAction","itemSizeInitAction","bulletSizeInitAction","bulletMoveAction","bulletStateAction","botMoveAction","bot2MoveAction","botSizeInitAction","bot2SizeInitAction","keyPositionSetPositionAction","exitSetPositionAction","boosterSetPositionAction","loadStateAction","actions","selectHeroPosition","game","selectGameOverStatus","selectBotPosition","ItemContainer","keyStatus","dispatch","keyItem","exit","booster","item","render","ProxyItem","cases","ItemInit","levelState","console","log","proxyExit","BaseBot","type","interval","moveLength","form","strategy","JumpersFactory","botLevel","MoversFactory","ShootersFactory","AbstractBotFactory","case1","case2","case3","case4","botLevel1","botLevel2","botLevel3","moversFactory","jumpersFactory","shootersFactory","factoryType","create","Command","abstractBotFactory","strategyFactory","smallSquareForm","bigSquareForm","highLineForm","form1","form2","form3","command","getForm","strategyType1","strategyType2","strategyType3","FormBaseClass","array","FormsFactory","MoveEightDirections","move","direction","moveBot","newPosition","MoveFourDirections","MoveLeft","MoveRandom","BulletStrategyFactory","botType","JumperStrategyFactory","MoverStrategyFactory","Stand","ShooterStrategyFactory","strategyType","BotStrategyFactory","CommanderCreatingFacade","BotFactory","formsFactory","botStategyFactory","BoosterDecorator","bot","CollisionChecker","firstObjPosition","firstObjSize","secondObjPosition","secondObjSize","BotModel","botXY","borderInlineWidth","backgroundColor","BotContainer","collisionChecker","heroXY","useEffect","setInterval","clearInterval","xPosition","yPosition","newXPosition","newYPosition","xMax","yMax","returnResultOfChecking","Level1BotWrapper","Facade","createCommander","execute","botContainer","SaveLoad","localStorage","clear","i","setItem","obj","length","key","stringValue","getItem","resValue","split","map","Number","Header","saveLoad","save","onClick","x","load","newBotPosition","play","GameArea","Hero","personName","keyCode","moveHero","borderWidth","y","HeroModel","GameOverModal","Game","gameOverState","newHero","handleUserKeyPress","useCallback","event","addEventListener","getPose","HeroInit","CollisionCheckerContainer","exitXY","keyXY","boosterXY","App","store","configureStore","reducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c4a78fde.chunk.js","sourcesContent":["import React from 'react'\r\nimport BaseItem from '../classes/items/baseItem'\r\nimport './../styles/gameStyles.css'\r\n\r\nfunction ItemModel(props) {\r\n    return (\r\n        <div\r\n            className='itemModelStyle'\r\n            style={{\r\n                top: props.position[1],\r\n                left: props.position[0],\r\n                borderColor: props.color,\r\n                width: props.size[0],\r\n                height: props.size[1],\r\n\r\n                // backgroundColor: props.item[2]\r\n            }}\r\n        ></div>\r\n    )\r\n}\r\nexport default React.memo(ItemModel)\r\n","import ItemModel from \"../../components/ItemModel\"\r\n\r\nexport default class BaseItem {\r\n    constructor() {\r\n        this.position = [\r\n            Math.ceil(Math.random() * 0.7 * window.screen.width + 50),\r\n            Math.ceil(Math.random() * 0.7 * window.screen.height + 50),\r\n        ]\r\n        this.size = [20, 20]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ItemModel\r\n                position={this.position}\r\n                color={\"white\"}\r\n                size={this.size}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { RootState } from '../app/store'\r\n\r\nexport interface GameState {\r\n    startStatus: boolean\r\n    difficultyStatus: number\r\n    heroName: string\r\n    level: number\r\n    gameOverStatus: boolean\r\n\r\n    heroPosition: number[]\r\n    botPosition: number[]\r\n    bot2Position: number[]\r\n\r\n    botSize: number[]\r\n    heroSize: number[]\r\n    itemSize: number[]\r\n    bot2Size: number[]\r\n\r\n    bulletPosition: number[]\r\n    bulletState: boolean\r\n    bulletSize: number[]\r\n\r\n    exitPosition: number[]\r\n    keyPosition: number[]\r\n    boosterPosition: number[]\r\n    pauseStatus: boolean\r\n    saveStatus: boolean\r\n    boosterStatus: boolean\r\n    keyForExit: boolean\r\n}\r\n\r\nexport const initialState: GameState = {\r\n    startStatus: false,\r\n    difficultyStatus: 0,\r\n    heroName: 'Ordinary Hero',\r\n    level: 8,\r\n    gameOverStatus: false,\r\n\r\n    heroPosition: [20, 60],\r\n    botPosition: [500, 500],\r\n    bot2Position: [500, 500],\r\n\r\n    heroSize: [],\r\n    itemSize: [],\r\n\r\n    bot2Size: [],\r\n    botSize: [],\r\n\r\n    bulletPosition: [],\r\n    bulletState: false,\r\n    bulletSize: [],\r\n\r\n    exitPosition: [],\r\n    keyPosition: [0, 0],\r\n    boosterPosition: [0, 0],\r\n\r\n    pauseStatus: false,\r\n    saveStatus: false,\r\n\r\n    boosterStatus: false,\r\n    keyForExit: false,\r\n}\r\n\r\nexport const gameSlice = createSlice({\r\n    name: 'game',\r\n    initialState,\r\n    reducers: {\r\n        difficultyStatusAction: (state, action: PayloadAction<number>) => {\r\n            state.difficultyStatus = action.payload\r\n        },\r\n        heroNameAction: (state, action: PayloadAction<string>) => {\r\n            state.heroName = action.payload\r\n        },\r\n        startStatusAction: (state) => {\r\n            state.startStatus = true\r\n        },\r\n\r\n        levelUpAction: (state) => {\r\n            state.level += 1\r\n        },\r\n\r\n        gameOverAction: (state, action: PayloadAction<boolean>) => {\r\n            state.gameOverStatus = action.payload\r\n        },\r\n        saveAction: (state, action: PayloadAction<boolean>) => {\r\n            state.saveStatus = action.payload\r\n        },\r\n        pauseStatusAction: (state, action: PayloadAction<boolean>) => {\r\n            state.pauseStatus = action.payload\r\n        },\r\n\r\n        keyForExitAction: (state, action: PayloadAction<boolean>) => {\r\n            state.keyForExit = action.payload\r\n        },\r\n        boosterStatusAction: (state, action: PayloadAction<boolean>) => {\r\n            state.boosterStatus = action.payload\r\n        },\r\n\r\n        heroMoveAction: (state, action: PayloadAction<number[]>) => {\r\n            state.heroPosition = action.payload\r\n        },\r\n        heroSizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.heroSize = action.payload\r\n        },\r\n        itemSizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.itemSize = action.payload\r\n        },\r\n\r\n        bulletSizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.bulletSize = action.payload\r\n        },\r\n        bulletMoveAction: (state, action: PayloadAction<number[]>) => {\r\n            state.bulletPosition = action.payload\r\n        },\r\n        bulletStateAction: (state, action: PayloadAction<boolean>) => {\r\n            state.bulletState = action.payload\r\n        },\r\n\r\n        botMoveAction: (state, action: PayloadAction<number[]>) => {\r\n            state.botPosition = action.payload\r\n        },\r\n        bot2MoveAction: (state, action: PayloadAction<number[]>) => {\r\n            state.bot2Position = action.payload\r\n        },\r\n        botSizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.botSize = action.payload\r\n        },\r\n        bot2SizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.bot2Size = action.payload\r\n        },\r\n\r\n        keyPositionSetPositionAction: (\r\n            state,\r\n            action: PayloadAction<number[]>\r\n        ) => {\r\n            state.keyPosition = action.payload\r\n        },\r\n        exitSetPositionAction: (state, action: PayloadAction<number[]>) => {\r\n            state.exitPosition = action.payload\r\n        },\r\n        boosterSetPositionAction: (state, action: PayloadAction<number[]>) => {\r\n            state.boosterPosition = action.payload\r\n        },\r\n\r\n        loadStateAction: (state, action: PayloadAction<GameState>) => {\r\n            state.heroPosition = action.payload.heroPosition\r\n\r\n            state.botPosition = action.payload.botPosition\r\n            state.bot2Position = action.payload.bot2Position\r\n\r\n            state.gameOverStatus = action.payload.gameOverStatus\r\n            state.saveStatus = action.payload.saveStatus\r\n            state.level = action.payload.level\r\n\r\n            state.bot2Size = action.payload.bot2Size\r\n            state.botSize = action.payload.botSize\r\n\r\n            state.keyPosition = action.payload.keyPosition\r\n            state.exitPosition = action.payload.exitPosition\r\n\r\n            // state = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    difficultyStatusAction,\r\n    levelUpAction,\r\n    gameOverAction,\r\n    pauseStatusAction,\r\n    startStatusAction,\r\n\r\n    heroMoveAction,\r\n    heroSizeInitAction,\r\n    heroNameAction,\r\n    botMoveAction,\r\n    botSizeInitAction,\r\n    bot2MoveAction,\r\n    bot2SizeInitAction,\r\n\r\n    loadStateAction,\r\n    saveAction,\r\n    keyForExitAction,\r\n    keyPositionSetPositionAction,\r\n    exitSetPositionAction,\r\n    boosterSetPositionAction,\r\n    boosterStatusAction,\r\n    itemSizeInitAction,\r\n\r\n    bulletSizeInitAction,\r\n    bulletMoveAction,\r\n    bulletStateAction,\r\n} = gameSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectHeroPosition = (state: RootState) => state.game.heroPosition\r\nexport const selectLevel = (state: RootState) => state.game.level\r\nexport const selectGameOverStatus = (state: RootState) =>\r\n    state.game.gameOverStatus\r\nexport const selectBotPosition = (state: RootState) => state.game.botPosition\r\nexport const selectItemPosition = (state: RootState) => state.game.keyPosition\r\nexport const selectExitPosition = (state: RootState) => state.game.exitPosition\r\n\r\n// export const incrementIfOdd = (amount: number) => (\r\n//   dispatch,\r\n//   getState\r\n// ) => {\r\n//   const currentValue = selectCount(getState());\r\n//   if (currentValue % 2 === 1) {\r\n//     dispatch(incrementByAmount(amount));\r\n//   }\r\n// };\r\n\r\nexport default gameSlice.reducer\r\n","import { useAppDispatch, useAppSelector } from '../app/hooks'\r\nimport {\r\n    boosterSetPositionAction,\r\n    exitSetPositionAction,\r\n    itemSizeInitAction,\r\n    keyPositionSetPositionAction,\r\n} from '../redux/gameSlice'\r\n\r\nexport default function ItemContainer(props) {\r\n    const keyStatus = useAppSelector((state) => state.game.keyForExit)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const keyItem = props.keyItem\r\n    const exit = props.exit\r\n    const booster = props.booster\r\n\r\n    dispatch(itemSizeInitAction(exit.item.size))\r\n    dispatch(exitSetPositionAction(exit.item.position))\r\n    dispatch(keyPositionSetPositionAction(keyItem.position))\r\n    dispatch(boosterSetPositionAction(booster.position))\r\n\r\n    return (\r\n        <>\r\n            {props.booster.render()}\r\n            {keyItem.render()}\r\n            {exit.render(keyStatus)}\r\n        </>\r\n    )\r\n}\r\n","import ItemModel from \"../../components/ItemModel\"\r\nimport ItemContainer from \"../../containers/itemContainer\"\r\n\r\nexport default class ProxyItem {\r\n    constructor(item) {\r\n        this.item = item\r\n    }\r\n    render(cases) {\r\n        switch (cases) {\r\n            case false:\r\n                return (\r\n                    <ItemModel\r\n                        position={this.item.position}\r\n                        color={\"transparent\"}\r\n                        size={this.item.size}\r\n                    />\r\n                )\r\n            case true:\r\n                return this.item.render()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import BaseItem from '../classes/items/baseItem'\r\nimport ItemContainer from './itemContainer'\r\nimport ProxyItem from '../classes/items/proxyItem'\r\nimport { useAppSelector } from '../app/hooks'\r\n\r\nexport default function ItemInit() {\r\n    const levelState = useAppSelector((state) => state.game.level) //it's for items refresh\r\n    console.log(levelState)\r\n    const keyItem = new BaseItem()\r\n    const exit = new BaseItem()\r\n    const proxyExit = new ProxyItem(exit)\r\n    const booster = new BaseItem()\r\n\r\n    console.log(proxyExit)\r\n\r\n    return (\r\n        <>\r\n            <ItemContainer\r\n                keyItem={keyItem}\r\n                exit={proxyExit}\r\n                booster={booster}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","export default class BaseBot {\r\n    constructor(type, position, interval, moveLength, form, strategy) {\r\n        this.type = type\r\n        this.position = position\r\n        // this.health = 0 //TODO\r\n        this.interval = interval\r\n        this.moveLength = moveLength\r\n        this.form = form //the bridge realisation\r\n        this.strategy = strategy\r\n    }\r\n}\r\n","//this is the fabric\r\n\r\nimport BaseBot from '../baseBotClass'\r\n\r\nexport default class JumpersFactory {\r\n    create(botLevel, form, strategy) {\r\n        switch (botLevel) {\r\n            case 'easy':\r\n                return new BaseBot(\r\n                    'jumper',\r\n                    [300, 300],\r\n                    500,\r\n                    50,\r\n                    form,\r\n                    strategy\r\n                )\r\n            case 'normal':\r\n                return new BaseBot(\r\n                    'jumper',\r\n                    [300, 300],\r\n                    500,\r\n                    50,\r\n                    form,\r\n                    strategy\r\n                )\r\n            case 'hard':\r\n                return new BaseBot(\r\n                    'jumper',\r\n                    [300, 300],\r\n                    500,\r\n                    50,\r\n                    form,\r\n                    strategy\r\n                )\r\n\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n    // constructor(form) {\r\n    //     super(form)\r\n\r\n    //     this.xPosition = 120\r\n    //     this.yPosition = 120\r\n    // }\r\n\r\n    getPose() {\r\n        return this.position\r\n    }\r\n\r\n    toForm() {\r\n        return this.form\r\n    }\r\n}\r\n","//this is the fabric\r\n\r\nimport BaseBot from '../baseBotClass'\r\n\r\nexport default class MoversFactory {\r\n    create(botLevel, form, strategy) {\r\n        switch (botLevel) {\r\n            case 'easy':\r\n                return new BaseBot('mover', [300, 300], 60, 10, form, strategy)\r\n            case 'normal':\r\n                return new BaseBot('mover', [300, 300], 60, 10, form, strategy)\r\n            case 'hard':\r\n                return new BaseBot('mover', [300, 300], 60, 10, form, strategy)\r\n\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n    // constructor(form) {\r\n    //     super(form)\r\n\r\n    //     this.xPosition = 120\r\n    //     this.yPosition = 120\r\n    // }\r\n\r\n    getPose() {\r\n        return this.position\r\n    }\r\n\r\n    toForm() {\r\n        return this.form\r\n    }\r\n}\r\n","//this is the fabric\r\n\r\nimport BaseBot from '../baseBotClass'\r\n\r\nexport default class ShootersFactory {\r\n    create(botLevel, form, strategy) {\r\n        console.log(botLevel, form, strategy)\r\n        switch (botLevel) {\r\n            case 'easy':\r\n                return [\r\n                    new BaseBot('shooter', [500, 300], 0, 0, form, strategy),\r\n                    new BaseBot('bullet', [700, 300], 50, 2, form, strategy),\r\n                    //TODO different strategies&forms\r\n                ]\r\n            case 'normal':\r\n                return [\r\n                    new BaseBot('shooter', [300, 300], 0, 0, form, strategy),\r\n                    new BaseBot('bullet', [500, 300], 40, 3, form, strategy),\r\n                ]\r\n            case 'hard':\r\n                return [\r\n                    new BaseBot('shooter', [800, 300], 0, 0, form, strategy),\r\n                    new BaseBot('bullet', [800, 300], 30, 4, form, strategy),\r\n                ]\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n    // constructor(form) {\r\n    //     super(form)\r\n\r\n    //     this.xPosition = 120\r\n    //     this.yPosition = 120\r\n    // }\r\n\r\n    getPose() {\r\n        return this.position\r\n    }\r\n\r\n    toForm() {\r\n        return this.form\r\n    }\r\n}\r\n","//this is the abstract factory\r\n\r\nimport BulletFactory from './botFactories/bulletFactory'\r\nimport JumpersFactory from './botFactories/jumperFactory'\r\nimport MoversFactory from './botFactories/moversFactory'\r\nimport ShootersFactory from './botFactories/shootersFactory'\r\n\r\nexport default class AbstractBotFactory {\r\n    constructor() {\r\n        this.case1 = 'mover'\r\n        this.case2 = 'jumper'\r\n        this.case3 = 'shooter'\r\n        this.case4 = 'bullet'\r\n        this.botLevel1 = 'easy'\r\n        this.botLevel2 = 'normal'\r\n        this.botLevel3 = 'hard'\r\n        this.moversFactory = new MoversFactory()\r\n        this.jumpersFactory = new JumpersFactory()\r\n        this.shootersFactory = new ShootersFactory()\r\n    }\r\n\r\n    create(factoryType, botLevel, form, strategy) {\r\n        console.log(factoryType, botLevel, form, strategy)\r\n        switch (factoryType) {\r\n            case this.case1:\r\n                return this.moversFactory.create(\r\n                    botLevel,\r\n                    form,\r\n                    strategy.create(botLevel)\r\n                )\r\n            case this.case2:\r\n                return this.jumpersFactory.create(\r\n                    botLevel,\r\n                    form,\r\n                    strategy.create(botLevel)\r\n                )\r\n            case this.case3:\r\n                return this.shootersFactory.create(\r\n                    botLevel,\r\n                    form,\r\n                    strategy.create(botLevel)\r\n                )\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","export default class Command {\r\n    constructor(\r\n        abstractBotFactory,\r\n        strategyFactory,\r\n        smallSquareForm,\r\n        bigSquareForm,\r\n        highLineForm\r\n    ) {\r\n        this.abstractBotFactory = abstractBotFactory\r\n        this.strategyFactory = strategyFactory\r\n        this.form1 = smallSquareForm\r\n        this.form2 = bigSquareForm\r\n        this.form3 = highLineForm\r\n    }\r\n    execute(command) {\r\n        switch (command) {\r\n            case 1:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case1,\r\n                    this.abstractBotFactory.botLevel1,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case1,\r\n                        this.strategyFactory.strategyType1\r\n                    )\r\n                )\r\n            case 2:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case1,\r\n                    this.abstractBotFactory.botLevel2,\r\n                    this.form2.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case2,\r\n                        this.strategyFactory.strategyType2\r\n                    )\r\n                )\r\n            case 3:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case1,\r\n                    this.abstractBotFactory.botLevel3,\r\n                    this.form3.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case3,\r\n                        this.strategyFactory.strategyType3\r\n                    )\r\n                )\r\n            case 4:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case2,\r\n                    this.abstractBotFactory.botLevel1,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case2,\r\n                        this.strategyFactory.strategyType1\r\n                    )\r\n                )\r\n            case 5:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case2,\r\n                    this.abstractBotFactory.botLevel2,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case2,\r\n                        this.strategyFactory.strategyType2\r\n                    )\r\n                )\r\n            case 6:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case2,\r\n                    this.abstractBotFactory.botLevel3,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case2,\r\n                        this.strategyFactory.strategyType3\r\n                    )\r\n                )\r\n            case 7:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case3,\r\n                    this.abstractBotFactory.botLevel1,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(this.strategyFactory.case3)\r\n                )\r\n            case 8:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case3,\r\n                    this.abstractBotFactory.botLevel2,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case2,\r\n                        this.strategyFactory.strategyType2\r\n                    )\r\n                )\r\n            case 9:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case3,\r\n                    this.abstractBotFactory.botLevel3,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case3,\r\n                        this.strategyFactory.strategyType3\r\n                    )\r\n                )\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","export default class FormBaseClass {\r\n    constructor(array, color) {\r\n        this.height = array[0]\r\n        this.width = array[1]\r\n        this.color = color\r\n    }\r\n\r\n    getForm() {\r\n        return [this.width, this.height]\r\n    }\r\n    // getForm() {\r\n    //     return ([this.height, this.width])\r\n    // }\r\n    // getHeight() {\r\n    //     return (this.height)\r\n    // }\r\n    // getWidth() {\r\n    //     return (this.width)\r\n    // }\r\n}\r\n","import FormBaseClass from \"./baseForms\"\r\n\r\nexport default class FormsFactory {\r\n    create(type) {\r\n        switch (type) {\r\n            case \"smallSquare\":\r\n                return new FormBaseClass([16, 16])\r\n            case \"bigSquare\":\r\n                return new FormBaseClass([38, 38])\r\n            case \"wideLine\":\r\n                return new FormBaseClass([16, 78])\r\n            case \"highLine\":\r\n                return new FormBaseClass([78, 16])\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","export default class MoveEightDirections {\r\n    move = (direction, moveBot, moveLength, position, heroPosition) => {\r\n        const newPosition = [...position]\r\n        if (\r\n            heroPosition[0] < newPosition[0] &&\r\n            heroPosition[1] < newPosition[1]\r\n        ) {\r\n            newPosition[0] -= moveLength\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] > newPosition[0] &&\r\n            heroPosition[1] < newPosition[1]\r\n        ) {\r\n            newPosition[0] += moveLength\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] > newPosition[0] &&\r\n            heroPosition[1] > newPosition[1]\r\n        ) {\r\n            newPosition[0] += moveLength\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] < newPosition[0] &&\r\n            heroPosition[1] > newPosition[1]\r\n        ) {\r\n            newPosition[0] -= moveLength\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] === newPosition[0] &&\r\n            heroPosition[1] > newPosition[1]\r\n        ) {\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] === newPosition[0] &&\r\n            heroPosition[1] < newPosition[1]\r\n        ) {\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] > newPosition[0] &&\r\n            heroPosition[1] === newPosition[1]\r\n        ) {\r\n            newPosition[0] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] < newPosition[0] &&\r\n            heroPosition[1] === newPosition[1]\r\n        ) {\r\n            newPosition[0] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        }\r\n    }\r\n}\r\n","export default class MoveFourDirections {\r\n    move = (direction, moveBot, moveLength, position, heroPosition) => {\r\n        const newPosition = [...position]\r\n        if (heroPosition[0] < newPosition[0]) {\r\n            newPosition[0] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (heroPosition[0] > newPosition[0]) {\r\n            newPosition[0] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (heroPosition[1] > newPosition[1]) {\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (heroPosition[1] < newPosition[1]) {\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        }\r\n    }\r\n}\r\n","export default class MoveLeft {\r\n    move = (direction, moveBot, moveLength, position) => {\r\n        const newPosition = [...position]\r\n        newPosition[0] -= moveLength\r\n        moveBot(newPosition[0], newPosition[1])\r\n    }\r\n}\r\n","export default class MoveRandom {\r\n    move = (direction, moveBot, moveLength, position) => {\r\n        const newPosition = [...position]\r\n        if (direction <= 2.5) {\r\n            newPosition[0] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (direction > 2.5 && direction <= 5) {\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (direction > 5 && direction <= 7.5) {\r\n            newPosition[0] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else {\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        }\r\n    }\r\n}\r\n","import MoveEightDirections from \"../strategies/moveEightDirections\"\r\nimport MoveFourDirections from \"../strategies/moveFourDirections\"\r\nimport MoveLeft from \"../strategies/moveLeft\"\r\nimport MoveRandom from \"../strategies/moveRandom\"\r\n\r\nexport default class BulletStrategyFactory {\r\n    create(factoryType, botType) {\r\n        switch (factoryType) {\r\n            case \"easy\":\r\n                return new MoveLeft()\r\n            case \"normal\":\r\n                return new MoveFourDirections()\r\n            case \"hard\":\r\n                return new MoveEightDirections()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import MoveEightDirections from \"../strategies/moveEightDirections\"\r\nimport MoveFourDirections from \"../strategies/moveFourDirections\"\r\nimport MoveRandom from \"../strategies/moveRandom\"\r\n\r\nexport default class JumperStrategyFactory {\r\n    create(factoryType, botType) {\r\n        switch (factoryType) {\r\n            case \"easy\":\r\n                return new MoveRandom()\r\n            case \"normal\":\r\n                return new MoveFourDirections()\r\n            case \"hard\":\r\n                return new MoveEightDirections()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import MoveEightDirections from '../strategies/moveEightDirections'\r\nimport MoveFourDirections from '../strategies/moveFourDirections'\r\nimport MoveRandom from '../strategies/moveRandom'\r\n\r\nexport default class MoverStrategyFactory {\r\n    create(botType) {\r\n        switch (botType) {\r\n            case 'easy':\r\n                return new MoveRandom()\r\n            case 'normal':\r\n                return new MoveFourDirections()\r\n            case 'hard':\r\n                return new MoveEightDirections()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","export default class Stand {\r\n    move = (direction, moveBot, moveLength, position) => {\r\n        moveBot(position[0], position[1])\r\n    }\r\n}\r\n","import MoveEightDirections from '../strategies/moveEightDirections'\r\nimport MoveFourDirections from '../strategies/moveFourDirections'\r\nimport MoveLeft from '../strategies/moveLeft'\r\nimport MoveRandom from '../strategies/moveRandom'\r\nimport Stand from '../strategies/stand'\r\n\r\nexport default class ShooterStrategyFactory {\r\n    create(strategyType) {\r\n        switch (strategyType) {\r\n            case 'easy':\r\n                return new Stand()\r\n            case 'normal':\r\n                return new MoveFourDirections()\r\n            case 'hard':\r\n                return new MoveEightDirections()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import BulletStrategyFactory from './bulletStrategyFactory'\r\nimport JumperStrategyFactory from './jumperStrategyFactory'\r\nimport MoverStrategyFactory from './moverStrategyFactory'\r\nimport ShooterStrategyFactory from './shooterStrategyFactory'\r\n\r\nexport default class BotStrategyFactory {\r\n    constructor() {\r\n        this.case1 = 'mover'\r\n        this.case2 = 'jumper'\r\n        this.case3 = 'shooter'\r\n        this.case4 = 'bullet'\r\n        this.strategyType1 = 'easy'\r\n        this.strategyType2 = 'normal'\r\n        this.strategyType3 = 'hard'\r\n    }\r\n    create(factoryType, strategyType) {\r\n        switch (factoryType) {\r\n            case this.case1:\r\n                return new MoverStrategyFactory()\r\n            case this.case2:\r\n                return new JumperStrategyFactory()\r\n            case this.case3:\r\n                console.log(new ShooterStrategyFactory())\r\n                return new ShooterStrategyFactory()\r\n            case this.case4:\r\n                return new BulletStrategyFactory()\r\n\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import AbstractBotFactory from './abstractBotFactory'\r\nimport Command from './command'\r\nimport FormsFactory from './forms/formsFactory'\r\nimport BotStrategyFactory from './strategyFactories/abstractStrategyFactory'\r\n\r\nexport default class CommanderCreatingFacade {\r\n    constructor() {\r\n        this.Command = Command\r\n        this.FormsFactory = FormsFactory\r\n        this.BotFactory = AbstractBotFactory\r\n        this.formsFactory = new FormsFactory()\r\n        this.form1 = this.formsFactory.create('smallSquare')\r\n        this.form2 = this.formsFactory.create('bigSquare')\r\n        this.form3 = this.formsFactory.create('highLine')\r\n        this.botStategyFactory = new BotStrategyFactory()\r\n    }\r\n\r\n    createCommander() {\r\n        return new this.Command(\r\n            new this.BotFactory(),\r\n            new BotStrategyFactory(),\r\n            this.formsFactory.create('smallSquare'),\r\n            this.formsFactory.create('bigSquare'),\r\n            this.formsFactory.create('highLine')\r\n        )\r\n    }\r\n}\r\n","export default class BoosterDecorator {\r\n    constructor(bot) {\r\n        this.bot = bot\r\n        this.bot.interval -= 10\r\n    }\r\n}\r\n","//this is the Mediator Pattern implementation\r\n\r\nexport default class CollisionChecker {\r\n    returnResultOfChecking(\r\n        firstObjPosition,\r\n        firstObjSize,\r\n        secondObjPosition,\r\n        secondObjSize\r\n    ) {\r\n        if (\r\n            firstObjPosition[0] + firstObjSize[0] >= secondObjPosition[0] &&\r\n            firstObjPosition[0] <= secondObjPosition[0] + secondObjSize[0]\r\n        ) {\r\n            if (\r\n                firstObjPosition[1] + firstObjSize[1] >= secondObjPosition[1] &&\r\n                firstObjPosition[1] <= secondObjPosition[1] + secondObjSize[1]\r\n            ) {\r\n                return true\r\n            } else return false\r\n        } else return false\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './../styles/gameStyles.css'\r\n\r\nfunction BotModel(props) {\r\n    return (\r\n        <div\r\n            className='botModelStyle'\r\n            style={{\r\n                top: props.botXY[1],\r\n                left: props.botXY[0],\r\n                width: props.form[0],\r\n                height: props.form[1],\r\n                borderInlineWidth: 4,\r\n                backgroundColor: props.color,\r\n            }}\r\n        ></div>\r\n    )\r\n}\r\n\r\nexport default React.memo(BotModel)\r\n","import { useEffect } from 'react'\r\nimport {\r\n    boosterStatusAction,\r\n    botMoveAction,\r\n    botSizeInitAction,\r\n    bulletMoveAction,\r\n    bulletStateAction,\r\n    gameOverAction,\r\n    selectBotPosition,\r\n    selectGameOverStatus,\r\n    selectHeroPosition,\r\n} from '../redux/gameSlice'\r\nimport { useAppDispatch, useAppSelector } from '../app/hooks'\r\nimport BoosterDecorator from '../classes/bots/decorators/boosterDecorator'\r\nimport CollisionChecker from '../classes/collisionChecker'\r\nimport BotModel from '../components/BotModel'\r\n\r\nexport default function BotContainer(props) {\r\n    const bulletState = useAppSelector((state) => state.game.bulletState)\r\n\r\n    const gameOverStatus = useAppSelector(selectGameOverStatus)\r\n    const pauseStatus = useAppSelector((state) => state.game.pauseStatus)\r\n    const boosterStatus = useAppSelector((state) => state.game.boosterStatus)\r\n    const levelState = useAppSelector((state) => state.game.level)\r\n    const collisionChecker = new CollisionChecker()\r\n\r\n    const botSize = useAppSelector((state) => state.game.botSize)\r\n    const heroSize = useAppSelector((state) => state.game.heroSize)\r\n    let botXY = useAppSelector(selectBotPosition)\r\n    const heroXY = useAppSelector(selectHeroPosition)\r\n    const bulletXY = useAppSelector((state) => state.game.bulletPosition)\r\n\r\n    const bot = props.bot\r\n    const dispatch = useAppDispatch()\r\n\r\n    // if ((bot.type === 'bullet') & !bulletState) {\r\n    //     botXY = bulletXY\r\n    //     bulletStateAction(true)\r\n    // }\r\n\r\n    if (boosterStatus && levelState >= 0) {\r\n        const boosterBot = new BoosterDecorator(bot)\r\n        dispatch(boosterStatusAction(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(botSizeInitAction(bot.form))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!gameOverStatus && !pauseStatus) {\r\n            const interval = setInterval(() => {\r\n                bot.strategy.move(\r\n                    Math.random() * 10,\r\n                    moveBot,\r\n                    bot.moveLength,\r\n                    botXY,\r\n                    heroXY\r\n                )\r\n            }, bot.interval)\r\n            return () => clearInterval(interval)\r\n        }\r\n    }, [botXY])\r\n\r\n    // useEffect(() => {\r\n    //     if (!gameOverStatus && !pauseStatus && bot.type === 'bullet') {\r\n    //         const interval = setInterval(() => {\r\n    //             //2 copies of interval => make 1 variable and put instead of this code\r\n\r\n    //             bot.strategy.move(\r\n    //                 Math.random() * 10,\r\n    //                 moveBot,\r\n    //                 bot.moveLength,\r\n    //                 botXY,\r\n    //                 heroXY\r\n    //             )\r\n    //         }, bot.interval)\r\n    //         return () => clearInterval(interval)\r\n    //     }\r\n    // }, [botXY])\r\n\r\n    // useEffect(() => {\r\n    //     const timeout = setTimeout(() => {\r\n    //         dispatch(bulletStateAction(false))\r\n    //     }, 2000)\r\n    // }, [bulletState])\r\n\r\n    const moveBot = (xPosition, yPosition) => {\r\n        let newXPosition = xPosition\r\n        let newYPosition = yPosition\r\n        let xMax = window.screen.width\r\n        let yMax = window.screen.height\r\n\r\n        if (xPosition <= 0) {\r\n            newXPosition = 20\r\n        }\r\n        if (yPosition <= 40) {\r\n            newYPosition = 40\r\n        }\r\n        if (xPosition >= xMax - 60) {\r\n            newXPosition = xMax - 60\r\n        }\r\n        if (yPosition >= yMax - 140) {\r\n            newYPosition = yMax - 160\r\n        }\r\n        console.log(newXPosition, newYPosition)\r\n        // if (bot.type !== 'bullet') {\r\n        dispatch(botMoveAction([newXPosition, newYPosition]))\r\n        // } else dispatch(bulletMoveAction([newXPosition, newYPosition]))\r\n    }\r\n\r\n    if (\r\n        collisionChecker.returnResultOfChecking(\r\n            heroXY,\r\n            heroSize,\r\n            botXY,\r\n            botSize\r\n        )\r\n    ) {\r\n        dispatch(gameOverAction(true))\r\n    }\r\n\r\n    // return <>{bot.returnComponent(botXY)}</>\r\n    return !bulletState ? (\r\n        <BotModel botXY={[...botXY]} form={bot.form} />\r\n    ) : (\r\n        <>\r\n            <BotModel botXY={[...botXY]} form={bot.form} />\r\n            <BotModel botXY={[...botXY]} form={bot.form} />\r\n        </>\r\n    )\r\n}\r\n","import { useAppSelector } from '../app/hooks'\r\nimport Facade from '../classes/bots/facade'\r\nimport FormsFactory from '../classes/bots/forms/formsFactory'\r\nimport BotContainer from './botContainer'\r\n\r\nexport default function Level1BotWrapper() {\r\n    const levelState = useAppSelector((state) => state.game.level)\r\n    const formsFactory = new FormsFactory() //abstract form factory init\r\n    const facade = new Facade(formsFactory) //Facade task - to hide all bot-production stages\r\n    const commander = facade.createCommander()\r\n    // const boss = new BossBuilder()\r\n    //     .formSmall()\r\n    //     .strategyNormal()\r\n    //     .actionTypeMover()\r\n    //     .createSimple()\r\n    // const boss2 = new BossBuilder()\r\n    //     .formBig()\r\n    //     .strategyNormal()\r\n    //     .actionTypeMover()\r\n    //     .createSimple()\r\n\r\n    const bot = commander.execute(levelState) //command pattern creates the bot based on levelState\r\n    let botContainer = <BotContainer bot={bot} />\r\n\r\n    if (levelState >= 7 && levelState < 10) {\r\n        botContainer = (\r\n            <>\r\n                <BotContainer bot={bot[0]} />\r\n                <BotContainer bot={bot[1]} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    // if (levelState === 7) {\r\n    //     BotContainer = (\r\n    //         <>\r\n    //             <BotContainer bot={boss} />\r\n    //         </>\r\n    //     )\r\n    // }\r\n\r\n    // return { BotContainer }\r\n    console.log(bot)\r\n    console.log(levelState)\r\n\r\n    return { ...botContainer }\r\n}\r\n","export default class SaveLoad {\r\n    constructor(state) {\r\n        this.state = state\r\n    }\r\n    save(state) {\r\n        localStorage.clear()\r\n        let i = 0\r\n        for (i in state) {\r\n            localStorage.setItem(i, state[i])\r\n        }\r\n        return new SaveLoad(state)\r\n    }\r\n    load() {\r\n        let obj = {}\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let key = localStorage.key(i)\r\n            let stringValue = localStorage.getItem(key)\r\n            let value = []\r\n            let resValue = stringValue\r\n            if (\r\n                key !== \"gameOverStatus\" &&\r\n                key !== \"pauseStatus\" &&\r\n                key !== \"saveStatus\" &&\r\n                key !== \"level\"\r\n            ) {\r\n                value = stringValue.split(\",\")\r\n                resValue = value.map(Number)\r\n            } else if (key === \"level\") {\r\n                resValue = +resValue[0]\r\n            } else {\r\n                resValue = stringValue === \"true\"\r\n            }\r\n            obj[key] = resValue\r\n        }\r\n        return obj\r\n    }\r\n}\r\n","import { useAppDispatch, useAppSelector } from \"../app/hooks\"\r\nimport SaveLoad from \"../classes/saveLoad\"\r\nimport {\r\n    botMoveAction,\r\n    loadStateAction,\r\n    pauseStatusAction,\r\n    saveAction,\r\n    selectBotPosition,\r\n} from \"../redux/gameSlice\"\r\nimport \"./../styles/gameStyles.css\"\r\n\r\nexport default function Header() {\r\n    let saveLoad = new SaveLoad()\r\n    const dispatch = useAppDispatch()\r\n    const state = useAppSelector((state) => state.game)\r\n    const botPosition = useAppSelector(selectBotPosition)\r\n    if (state.saveStatus) {\r\n        dispatch(saveAction(false))\r\n        saveLoad.save(state)\r\n    }\r\n\r\n    const load = () => {\r\n        let x = saveLoad.load()\r\n        dispatch(loadStateAction(x))\r\n    }\r\n\r\n    const play = () => {\r\n        const newBotPosition = [...botPosition]\r\n        newBotPosition[0] += 1 //it's because of useEffect dependency , for \"alive\" bot\r\n        dispatch(pauseStatusAction(false))\r\n        dispatch(botMoveAction(newBotPosition))\r\n    }\r\n    return (\r\n        <div className='header'>\r\n            <span style={{ color: \"whitesmoke\" }}>Level {state.level}</span>\r\n            <button\r\n                onClick={() => {\r\n                    dispatch(saveAction(true))\r\n                }}\r\n            >\r\n                Save\r\n            </button>\r\n            <button onClick={() => load()}>Load</button>\r\n            <button onClick={() => dispatch(pauseStatusAction(true))}>\r\n                Pause\r\n            </button>\r\n            <button onClick={() => play()}>Play</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport \"../styles/gameStyles.css\"\r\n\r\nfunction GameArea() {\r\n    return <div className='containerStyle' />\r\n}\r\n\r\nexport default React.memo(GameArea)\r\n","export default class Hero {\r\n    constructor(\r\n        position,\r\n        personName = 'Hero',\r\n        xPosition = 0,\r\n        yPosition = 0,\r\n        level = 0,\r\n        moveLength = 20,\r\n        size = [40, 40]\r\n    ) {\r\n        this.personName = personName\r\n        this.xPosition = xPosition\r\n        this.yPosition = yPosition\r\n        this.size = size\r\n        this.moveLength = moveLength\r\n        this.level = level\r\n        this.color = 'white'\r\n        this.borderWidth = 4\r\n    }\r\n\r\n    move = (keyCode, moveHero) => {\r\n        switch (keyCode) {\r\n            case 37:\r\n                this.xPosition -= this.moveLength\r\n                moveHero(this.xPosition, this.yPosition)\r\n                break\r\n            case 38:\r\n                this.yPosition -= this.moveLength\r\n                moveHero(this.xPosition, this.yPosition)\r\n                break\r\n            case 39:\r\n                this.xPosition += this.moveLength\r\n                moveHero(this.xPosition, this.yPosition)\r\n                break\r\n            case 40:\r\n                this.yPosition += this.moveLength\r\n                moveHero(this.xPosition, this.yPosition)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    getPose(x, y) {\r\n        this.xPosition = x\r\n        this.yPosition = y\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\"\r\nimport SaveLoad from \"../classes/saveLoad\"\r\nimport { botMoveAction, loadStateAction } from \"../redux/gameSlice\"\r\nimport \"./../styles/gameStyles.css\"\r\n\r\nfunction HeroModel(props) {\r\n    return (\r\n        <div\r\n            className='heroModelStyle'\r\n            style={{\r\n                top: props.heroXY[1],\r\n                left: props.heroXY[0],\r\n                width: props.heroSize[0],\r\n                height: props.heroSize[1],\r\n                borderInlineWidth: 4,\r\n            }}\r\n        ></div>\r\n    )\r\n}\r\n\r\nexport default React.memo(HeroModel)\r\n","import { useAppDispatch, useAppSelector } from \"../app/hooks\"\r\nimport { gameOverAction, loadStateAction } from \"../redux/gameSlice\"\r\nimport \"./../styles/gameStyles.css\"\r\nimport { initialState } from \"../redux/gameSlice\"\r\n\r\nexport default function GameOverModal() {\r\n    const dispatch = useAppDispatch()\r\n    const gameRestart = () => {\r\n        dispatch(gameOverAction(false))\r\n        dispatch(loadStateAction(initialState))\r\n    }\r\n    return (\r\n        <div className='modalContainer'>\r\n            <div className='modalContent'>Game over!</div>\r\n            <div>\r\n                <button className='modalButton' onClick={() => gameRestart()}>\r\n                    Try again!\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useCallback } from 'react'\r\nimport './../styles/gameStyles.css'\r\nimport HeroModel from '../components/HeroModel'\r\nimport { useAppDispatch, useAppSelector } from '../app/hooks'\r\nimport {\r\n    heroMoveAction,\r\n    heroSizeInitAction,\r\n    selectGameOverStatus,\r\n    selectHeroPosition,\r\n} from '../redux/gameSlice'\r\nimport GameOverModal from '../components/GameOverModal'\r\n\r\nexport default function Game(props) {\r\n    const heroXY = useAppSelector(selectHeroPosition)\r\n    const gameOverState = useAppSelector(selectGameOverStatus)\r\n    const boosterPosition = useAppSelector(\r\n        (state) => state.game.boosterPosition\r\n    )\r\n\r\n    const dispatch = useAppDispatch()\r\n    const newHero = props.newHero\r\n    dispatch(heroSizeInitAction(newHero.size))\r\n    const handleUserKeyPress = useCallback((event) => {\r\n        const { keyCode } = event\r\n        if (keyCode >= 37 && keyCode <= 40) {\r\n            newHero.move(keyCode, moveHero)\r\n        }\r\n    }, [])\r\n    window.addEventListener('keydown', handleUserKeyPress)\r\n\r\n    const moveHero = (xPosition, yPosition) => {\r\n        let newXPosition = xPosition\r\n        let newYPosition = yPosition\r\n        let xMax = window.screen.width\r\n        let yMax = window.screen.height\r\n\r\n        if (xPosition <= 0) {\r\n            newXPosition = 20\r\n        }\r\n        if (yPosition <= 40) {\r\n            newYPosition = 40\r\n        }\r\n        if (xPosition >= xMax - 60) {\r\n            newXPosition = xMax - 60\r\n        }\r\n        if (yPosition >= yMax - 140) {\r\n            newYPosition = yMax - 160\r\n        }\r\n        dispatch(heroMoveAction([newXPosition, newYPosition]))\r\n        newHero.getPose(newXPosition, newYPosition)\r\n    }\r\n\r\n    // const gameOverSwitcher = (gameOverStatus) => {\r\n    //     dispatch(gameOverAction(false))\r\n    // }\r\n\r\n    return gameOverState ? (\r\n        <GameOverModal />\r\n    ) : (\r\n        <div>\r\n            <HeroModel heroXY={heroXY} heroSize={newHero.size} />\r\n        </div>\r\n    )\r\n}\r\n","import Hero from '../classes/hero'\r\nimport Game from './game'\r\n\r\nexport default function HeroInit(props) {\r\n    const newHero = new Hero()\r\n    return (\r\n        <>\r\n            <Game newHero={newHero} />\r\n        </>\r\n    )\r\n}\r\n","import { useAppDispatch, useAppSelector } from '../app/hooks'\r\nimport CollisionChecker from '../classes/collisionChecker'\r\nimport {\r\n    boosterStatusAction,\r\n    exitSetPositionAction,\r\n    keyForExitAction,\r\n    levelUpAction,\r\n    selectHeroPosition,\r\n} from '../redux/gameSlice'\r\n\r\nexport default function CollisionCheckerContainer() {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const heroSize = useAppSelector((state) => state.game.heroSize)\r\n    // const botXY = useAppSelector(selectBotPosition)\r\n    const heroXY = useAppSelector(selectHeroPosition)\r\n\r\n    const exitXY = useAppSelector((state) => state.game.exitPosition)\r\n    const keyXY = useAppSelector((state) => state.game.keyPosition)\r\n    const boosterXY = useAppSelector((state) => state.game.boosterPosition)\r\n    const itemSize = useAppSelector((state) => state.game.itemSize)\r\n\r\n    const collisionChecker = new CollisionChecker()\r\n    // let flag = false\r\n\r\n    if (\r\n        collisionChecker.returnResultOfChecking(\r\n            heroXY,\r\n            heroSize,\r\n            keyXY,\r\n            itemSize\r\n        )\r\n    ) {\r\n        dispatch(keyForExitAction(true))\r\n    }\r\n    if (\r\n        collisionChecker.returnResultOfChecking(\r\n            heroXY,\r\n            heroSize,\r\n            exitXY,\r\n            itemSize\r\n        )\r\n    ) {\r\n        console.log('LEVEL-UP')\r\n        console.log(heroXY, heroSize, exitXY, itemSize)\r\n        dispatch(levelUpAction())\r\n        dispatch(keyForExitAction(false))\r\n        dispatch(boosterStatusAction(false))\r\n        dispatch(exitSetPositionAction([900, 900]))\r\n        //item new position, otherwise auto level-up\r\n    }\r\n    if (\r\n        collisionChecker.returnResultOfChecking(\r\n            heroXY,\r\n            heroSize,\r\n            boosterXY,\r\n            itemSize\r\n        )\r\n    ) {\r\n        dispatch(boosterStatusAction(true))\r\n    }\r\n    // console.log(flag)\r\n\r\n    // switch (flag) {\r\n    //     case \"gameOver\":\r\n    //         dispatch(gameOverAction(false))\r\n    //         break\r\n    //     case \"keyFound\":\r\n    //         dispatch(keyForExitAction(true))\r\n    //         break\r\n    //     case \"exitFound\":\r\n    //         dispatch(levelUpAction())\r\n    //         dispatch(exitSetPositionAction([600, 600]))\r\n    //         dispatch(keyForExitAction(false))\r\n    //         dispatch(boosterStatusAction(false))\r\n    //         break\r\n    //     case \"boosterFound\":\r\n    //         dispatch(boosterStatusAction(true))\r\n    //         break\r\n    //     default:\r\n    //         return false\r\n    // }\r\n    return false\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport ItemInit from './containers/itemInit'\r\nimport Level1BotWrapper from './containers/botInit'\r\nimport { useAppSelector } from './app/hooks'\r\nimport Header from './components/Header'\r\nimport GameArea from './components/GameArea'\r\nimport HeroInit from './containers/heroInit'\r\nimport CollisionCheckerContainer from './containers/collisionCheckerContainer'\r\nimport MainMenu from './components/MainMenu'\r\n\r\nfunction App() {\r\n    const startStatus = useAppSelector((state) => state.game.startStatus)\r\n\r\n    // const levelState = useAppSelector(selectLevel)\r\n    // function renderSwitch(levelState) {\r\n    //     console.log(\"here\")\r\n    //     switch (levelState) {\r\n    //         case 1:\r\n    //             return <Level1BotWrapper />\r\n    //         case 2:\r\n    //             return <Level2BotWrapper />\r\n    //         default:\r\n    //             return false\r\n    //     }\r\n    // }\r\n    return (\r\n        // !startStatus ? (\r\n        //     <>\r\n        //         <MainMenu />\r\n        //         <GameArea />\r\n        //     </>\r\n        // ) : (\r\n        <>\r\n            <Header />\r\n            <GameArea />\r\n            <HeroInit />\r\n            <ItemInit />\r\n            <Level1BotWrapper />\r\n            <CollisionCheckerContainer />\r\n            {/* {renderSwitch(levelState)} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport gameSlice from '../redux/gameSlice';\r\nimport { compose } from 'redux'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameSlice,\r\n  },\r\n});\r\n\r\ndeclare global {\r\n  interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// export type AppThunk<ReturnType = void> = ThunkAction<\r\n//   ReturnType,\r\n//   RootState,\r\n//   unknown,\r\n//   Action<string>\r\n// >;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}