{"version":3,"sources":["components/ItemModel.jsx","classes/items/baseItem.js","app/hooks.ts","redux/gameSlice.ts","containers/itemContainer.jsx","classes/items/proxyItem.js","containers/itemInit.jsx","components/BotModel.jsx","classes/bots/baseBotClass.js","classes/bots/botFactories/moversFactory.js","classes/bots/command.js","classes/bots/forms/baseForms.js","classes/bots/forms/formsFactory.js","classes/bots/strategies/moveRandom.js","classes/bots/strategies/moveFourDirections.js","classes/bots/strategies/moveEightDirections.js","classes/bots/botFactories/jumperFactory.js","classes/bots/botFactories/shootersFactory.js","classes/bots/abstractBotFactory.js","classes/bots/strategies/moveLeft.js","classes/bots/strategyFactories/bulletStrategyFactory.js","classes/bots/strategyFactories/jumperStrategyFactory.js","classes/bots/strategyFactories/moverStrategyFactory.js","classes/bots/strategies/stand.js","classes/bots/strategyFactories/shooterStrategyFactory.js","classes/bots/strategyFactories/abstractStrategyFactory.js","classes/bots/facade.js","classes/bots/decorators/boosterDecorator.js","classes/collisionChecker.js","containers/botContainer.js","containers/botInit.js","classes/saveLoad.js","components/Header.jsx","components/GameArea.jsx","classes/hero.js","components/HeroModel.jsx","components/GameOverModal.jsx","containers/game.jsx","containers/heroInit.jsx","containers/collisionCheckerContainer.js","App.jsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["ItemModel","props","className","style","top","position","left","borderColor","color","width","size","height","React","memo","BaseItem","this","Math","ceil","random","window","screen","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","startStatus","difficultyStatus","heroName","level","gameOverStatus","heroPosition","botPosition","bot2Position","heroSize","itemSize","bot2Size","botSize","bulletPosition","bulletState","bulletSize","exitPosition","keyPosition","boosterPosition","pauseStatus","saveStatus","boosterStatus","keyForExit","gameSlice","createSlice","name","reducers","difficultyStatusAction","state","action","payload","heroNameAction","startStatusAction","levelUpAction","gameOverAction","saveAction","pauseStatusAction","keyForExitAction","boosterStatusAction","heroMoveAction","heroSizeInitAction","itemSizeInitAction","bulletSizeInitAction","bulletMoveAction","bulletStateAction","botMoveAction","bot2MoveAction","botSizeInitAction","bot2SizeInitAction","keyPositionSetPositionAction","exitSetPositionAction","boosterSetPositionAction","loadStateAction","actions","selectHeroPosition","game","selectGameOverStatus","selectBotPosition","selectExitPosition","ItemContainer","keyStatus","dispatch","keyItem","exit","booster","item","render","ProxyItem","cases","ItemInit","levelState","console","log","proxyExit","BotModel","botXY","form","borderInlineWidth","backgroundColor","BaseBot","type","interval","moveLength","strategy","MoversFactory","botLevel","Command","abstractBotFactory","strategyFactory","smallSquareForm","bigSquareForm","highLineForm","form1","form2","form3","command","create","case1","botLevel1","getForm","strategyType1","botLevel2","case2","strategyType2","botLevel3","case3","strategyType3","FormBaseClass","array","FormsFactory","MoveRandom","move","direction","moveBot","newPosition","MoveFourDirections","MoveEightDirections","JumpersFactory","ShootersFactory","AbstractBotFactory","case4","moversFactory","jumpersFactory","shootersFactory","factoryType","MoveLeft","BulletStrategyFactory","botType","JumperStrategyFactory","MoverStrategyFactory","Stand","ShooterStrategyFactory","BotStrategyFactory","strategyType","CommanderCreatingFacade","BotFactory","formsFactory","botStategyFactory","BoosterDecorator","bot","CollisionChecker","firstObjPosition","firstObjSize","secondObjPosition","secondObjSize","BotContainer","collisionChecker","heroXY","bulletXY","useEffect","setInterval","clearInterval","setTimeout","xPosition","yPosition","newXPosition","newYPosition","xMax","yMax","returnResultOfChecking","Level1BotWrapper","Facade","createCommander","execute","SaveLoad","localStorage","clear","i","setItem","obj","length","key","stringValue","getItem","resValue","split","map","Number","Header","saveLoad","save","onClick","x","load","newBotPosition","play","GameArea","Hero","personName","keyCode","moveHero","borderWidth","y","HeroModel","GameOverModal","Game","gameOverState","newHero","handleUserKeyPress","useCallback","event","addEventListener","getPose","HeroInit","CollisionCheckerContainer","exitXY","keyXY","boosterXY","App","store","configureStore","reducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0OAIA,SAASA,EAAUC,GACf,OACI,qBACIC,UAAU,iBACVC,MAAO,CACHC,IAAKH,EAAMI,SAAS,GACpBC,KAAML,EAAMI,SAAS,GACrBE,YAAaN,EAAMO,MACnBC,MAAOR,EAAMS,KAAK,GAClBC,OAAQV,EAAMS,KAAK,MAOpBE,UAAMC,KAAKb,GClBLc,E,WACjB,aAAe,oBACXC,KAAKV,SAAW,CACZW,KAAKC,KAAqB,GAAhBD,KAAKE,SAAiBC,OAAOC,OAAOX,MAAQ,IACtDO,KAAKC,KAAqB,GAAhBD,KAAKE,SAAiBC,OAAOC,OAAOT,OAAS,KAE3DI,KAAKL,KAAO,CAAC,GAAI,I,0CAGrB,WACI,OACI,cAAC,EAAD,CACIL,SAAUU,KAAKV,SACfG,MAAO,QACPE,KAAMK,KAAKL,W,YCZdW,EAAiB,kBAAMC,eACvBC,EAAkDC,I,OC2BlDC,EAA0B,CACnCC,aAAa,EACbC,iBAAkB,EAClBC,SAAU,gBACVC,MAAO,EACPC,gBAAgB,EAEhBC,aAAc,CAAC,GAAI,IACnBC,YAAa,CAAC,IAAK,KACnBC,aAAc,CAAC,IAAK,KAEpBC,SAAU,GACVC,SAAU,GAEVC,SAAU,GACVC,QAAS,GAETC,eAAgB,GAChBC,aAAa,EACbC,WAAY,GAEZC,aAAc,GACdC,YAAa,CAAC,EAAG,GACjBC,gBAAiB,CAAC,EAAG,GAErBC,aAAa,EACbC,YAAY,EAEZC,eAAe,EACfC,YAAY,GAGHC,EAAYC,YAAY,CACjCC,KAAM,OACNzB,eACA0B,SAAU,CACNC,uBAAwB,SAACC,EAAOC,GAC5BD,EAAM1B,iBAAmB2B,EAAOC,SAEpCC,eAAgB,SAACH,EAAOC,GACpBD,EAAMzB,SAAW0B,EAAOC,SAE5BE,kBAAmB,SAACJ,GAChBA,EAAM3B,aAAc,GAGxBgC,cAAe,SAACL,GACZA,EAAMxB,OAAS,GAGnB8B,eAAgB,SAACN,EAAOC,GACpBD,EAAMvB,eAAiBwB,EAAOC,SAElCK,WAAY,SAACP,EAAOC,GAChBD,EAAMR,WAAaS,EAAOC,SAE9BM,kBAAmB,SAACR,EAAOC,GACvBD,EAAMT,YAAcU,EAAOC,SAG/BO,iBAAkB,SAACT,EAAOC,GACtBD,EAAMN,WAAaO,EAAOC,SAE9BQ,oBAAqB,SAACV,EAAOC,GACzBD,EAAMP,cAAgBQ,EAAOC,SAGjCS,eAAgB,SAACX,EAAOC,GACpBD,EAAMtB,aAAeuB,EAAOC,SAEhCU,mBAAoB,SAACZ,EAAOC,GACxBD,EAAMnB,SAAWoB,EAAOC,SAE5BW,mBAAoB,SAACb,EAAOC,GACxBD,EAAMlB,SAAWmB,EAAOC,SAG5BY,qBAAsB,SAACd,EAAOC,GAC1BD,EAAMb,WAAac,EAAOC,SAE9Ba,iBAAkB,SAACf,EAAOC,GACtBD,EAAMf,eAAiBgB,EAAOC,SAElCc,kBAAmB,SAAChB,EAAOC,GACvBD,EAAMd,YAAce,EAAOC,SAG/Be,cAAe,SAACjB,EAAOC,GACnBD,EAAMrB,YAAcsB,EAAOC,SAE/BgB,eAAgB,SAAClB,EAAOC,GACpBD,EAAMpB,aAAeqB,EAAOC,SAEhCiB,kBAAmB,SAACnB,EAAOC,GACvBD,EAAMhB,QAAUiB,EAAOC,SAE3BkB,mBAAoB,SAACpB,EAAOC,GACxBD,EAAMjB,SAAWkB,EAAOC,SAG5BmB,6BAA8B,SAC1BrB,EACAC,GAEAD,EAAMX,YAAcY,EAAOC,SAE/BoB,sBAAuB,SAACtB,EAAOC,GAC3BD,EAAMZ,aAAea,EAAOC,SAEhCqB,yBAA0B,SAACvB,EAAOC,GAC9BD,EAAMV,gBAAkBW,EAAOC,SAGnCsB,gBAAiB,SAACxB,EAAOC,GACrBD,EAAMtB,aAAeuB,EAAOC,QAAQxB,aAEpCsB,EAAMrB,YAAcsB,EAAOC,QAAQvB,YACnCqB,EAAMpB,aAAeqB,EAAOC,QAAQtB,aAEpCoB,EAAMvB,eAAiBwB,EAAOC,QAAQzB,eACtCuB,EAAMR,WAAaS,EAAOC,QAAQV,WAClCQ,EAAMxB,MAAQyB,EAAOC,QAAQ1B,MAE7BwB,EAAMjB,SAAWkB,EAAOC,QAAQnB,SAChCiB,EAAMhB,QAAUiB,EAAOC,QAAQlB,QAE/BgB,EAAMX,YAAcY,EAAOC,QAAQb,YACnCW,EAAMZ,aAAea,EAAOC,QAAQd,iBAOzC,EA2BHO,EAAU8B,QAzBVpB,GAFG,EACHN,uBADG,EAEHM,eACAC,EAHG,EAGHA,eACAE,EAJG,EAIHA,kBAGAG,GAPG,EAKHP,kBALG,EAOHO,gBACAC,EARG,EAQHA,mBAEAK,GAVG,EASHd,eATG,EAUHc,eACAE,EAXG,EAWHA,kBAIAK,GAfG,EAYHN,eAZG,EAaHE,mBAbG,EAeHI,iBACAjB,EAhBG,EAgBHA,WACAE,EAjBG,EAiBHA,iBACAY,EAlBG,EAkBHA,6BACAC,EAnBG,EAmBHA,sBACAC,EApBG,EAoBHA,yBACAb,EArBG,EAqBHA,oBACAG,EAtBG,EAsBHA,mBAGAE,GAzBG,EAwBHD,qBAxBG,EAyBHC,kBACAC,EA1BG,EA0BHA,kBAMSU,EAAqB,SAAC1B,GAAD,OAAsBA,EAAM2B,KAAKjD,cAEtDkD,EAAuB,SAAC5B,GAAD,OAChCA,EAAM2B,KAAKlD,gBACFoD,EAAoB,SAAC7B,GAAD,OAAsBA,EAAM2B,KAAKhD,aAErDmD,EAAqB,SAAC9B,GAAD,OAAsBA,EAAM2B,KAAKvC,cAYpDO,IAAf,QC7Me,SAASoC,EAAcnF,GACnBsB,EAAewD,GAA9B,IACMM,EAAY9D,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKjC,cAIjDuC,EAAWjE,IAEXkE,EAAUtF,EAAMsF,QAChBC,EAAOvF,EAAMuF,KACbC,EAAUxF,EAAMwF,QAiCtB,OA/BAH,EAASpB,EAAmBsB,EAAKE,KAAKhF,OACtC4E,EAASX,EAAsBa,EAAKE,KAAKrF,WACzCiF,EAASZ,EAA6Ba,EAAQlF,WAC9CiF,EAASV,EAAyBa,EAAQpF,WA6BtC,qCAkBKJ,EAAMwF,QAAQE,SACdJ,EAAQI,SACRH,EAAKG,OAAON,M,ICxEJO,E,WACjB,WAAYF,GAAO,oBACf3E,KAAK2E,KAAOA,E,0CAEhB,SAAOG,GACH,OAAQA,GACJ,KAAK,EACD,OACI,cAAC,EAAD,CACIxF,SAAUU,KAAK2E,KAAKrF,SACpBG,MAAO,cACPE,KAAMK,KAAK2E,KAAKhF,OAG5B,KAAK,EACD,OAAOK,KAAK2E,KAAKC,SACrB,QACI,OAAO,O,KCfR,SAASG,IACpB,IAAMC,EAAaxE,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKnD,SACxDmE,QAAQC,IAAIF,GACZ,IAAMR,EAAU,IAAIzE,EACd0E,EAAO,IAAI1E,EACXoF,EAAY,IAAIN,EAAUJ,GAC1BC,EAAU,IAAI3E,EAIpB,OAFAkF,QAAQC,IAAIC,GAGR,mCACI,cAACd,EAAD,CACIG,QAASA,EACTC,KAAMU,EACNT,QAASA,M,uBCjBzB,SAASU,EAASlG,GACd,OACI,qBACIC,UAAU,gBACVC,MAAO,CACHC,IAAKH,EAAMmG,MAAM,GACjB9F,KAAML,EAAMmG,MAAM,GAClB3F,MAAOR,EAAMoG,KAAK,GAClB1F,OAAQV,EAAMoG,KAAK,GACnBC,kBAAmB,EACnBC,gBAAiBtG,EAAMO,SAMxBI,UAAMC,KAAKsF,GCjBLK,E,WACjB,WAAYC,EAAMpG,EAAUqG,EAAUC,EAAYN,EAAMO,GAAW,oBAC/D7F,KAAK0F,KAAOA,EACZ1F,KAAKV,SAAWA,EAEhBU,KAAK2F,SAAWA,EAChB3F,KAAK4F,WAAaA,EAClB5F,KAAKsF,KAAOA,EACZtF,KAAK6F,SAAWA,E,mDAGpB,SAAgBR,GACZ,OAAO,cAAC,EAAD,CAAUA,MAAK,YAAMA,GAAQC,KAAMtF,KAAKsF,W,KCTlCQ,E,sFACjB,SAAOC,EAAUT,EAAMO,GACnB,OAAQE,GACJ,IAAK,OAEL,IAAK,SAEL,IAAK,OACD,OAAO,IAAIN,EAAQ,QAAS,CAAC,IAAK,KAAM,GAAI,GAAIH,EAAMO,GAE1D,QACI,OAAO,K,qBAUnB,WACI,OAAO7F,KAAKV,W,oBAGhB,WACI,OAAOU,KAAKsF,S,KC/BCU,E,WACjB,WACIC,EACAC,EACAC,EACAC,EACAC,GACD,oBACCrG,KAAKiG,mBAAqBA,EAC1BjG,KAAKkG,gBAAkBA,EACvBlG,KAAKsG,MAAQH,EACbnG,KAAKuG,MAAQH,EACbpG,KAAKwG,MAAQH,E,2CAEjB,SAAQI,GACJ,OAAQA,GACJ,KAAK,EACD,OAAOzG,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBU,MACxB3G,KAAKiG,mBAAmBW,UACxB5G,KAAKsG,MAAMO,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBS,MACrB3G,KAAKkG,gBAAgBY,gBAGjC,KAAK,EACD,OAAO9G,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBU,MACxB3G,KAAKiG,mBAAmBc,UACxB/G,KAAKuG,MAAMM,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBc,MACrBhH,KAAKkG,gBAAgBe,gBAGjC,KAAK,EACD,OAAOjH,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBU,MACxB3G,KAAKiG,mBAAmBiB,UACxBlH,KAAKwG,MAAMK,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBiB,MACrBnH,KAAKkG,gBAAgBkB,gBAGjC,KAAK,EACD,OAAOpH,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBe,MACxBhH,KAAKiG,mBAAmBW,UACxB5G,KAAKsG,MAAMO,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBS,MACrB3G,KAAKkG,gBAAgBY,gBAGjC,KAAK,EACD,OAAO9G,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBe,MACxBhH,KAAKiG,mBAAmBc,UACxB/G,KAAKsG,MAAMO,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBc,MACrBhH,KAAKkG,gBAAgBe,gBAGjC,KAAK,EACD,OAAOjH,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBe,MACxBhH,KAAKiG,mBAAmBiB,UACxBlH,KAAKsG,MAAMO,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBiB,MACrBnH,KAAKkG,gBAAgBkB,gBAGjC,KAAK,EACD,OAAOpH,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBkB,MACxBnH,KAAKiG,mBAAmBW,UACxB5G,KAAKsG,MAAMO,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBS,MACrB3G,KAAKkG,gBAAgBY,gBAGjC,KAAK,EACD,OAAO9G,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBkB,MACxBnH,KAAKiG,mBAAmBc,UACxB/G,KAAKsG,MAAMO,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBc,MACrBhH,KAAKkG,gBAAgBe,gBAGjC,KAAK,EACD,OAAOjH,KAAKiG,mBAAmBS,OAC3B1G,KAAKiG,mBAAmBkB,MACxBnH,KAAKiG,mBAAmBiB,UACxBlH,KAAKsG,MAAMO,UACX7G,KAAKkG,gBAAgBQ,OACjB1G,KAAKkG,gBAAgBiB,MACrBnH,KAAKkG,gBAAgBkB,gBAGjC,QACI,OAAO,O,KC3GFC,E,WACjB,WAAYC,EAAO7H,GAAQ,oBACvBO,KAAKJ,OAAS0H,EAAM,GACpBtH,KAAKN,MAAQ4H,EAAM,GACnBtH,KAAKP,MAAQA,E,2CAGjB,WACI,MAAO,CAACO,KAAKN,MAAOM,KAAKJ,Y,KCNZ2H,E,sFACjB,SAAO7B,GACH,OAAQA,GACJ,IAAK,cACD,OAAO,IAAI2B,EAAc,CAAC,GAAI,KAClC,IAAK,YACD,OAAO,IAAIA,EAAc,CAAC,GAAI,KAClC,IAAK,WACD,OAAO,IAAIA,EAAc,CAAC,GAAI,KAClC,IAAK,WACD,OAAO,IAAIA,EAAc,CAAC,GAAI,KAClC,QACI,OAAO,O,KCdFG,E,sCACjBC,KAAO,SAACC,EAAWC,EAAS/B,EAAYtG,GACpC,IAAMsI,EAAW,YAAOtI,GACpBoI,GAAa,KACbE,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAC7BF,EAAY,KAAOA,GAAa,GACvCE,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAC7BF,EAAY,GAAKA,GAAa,KACrCE,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,MAEpCA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,OCd3BC,G,sCACjBJ,KAAO,SAACC,EAAWC,EAAS/B,EAAYtG,EAAU0B,GAC9C,IAAM4G,EAAW,YAAOtI,GACpB0B,EAAa,GAAK4G,EAAY,IAC9BA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAC7B5G,EAAa,GAAK4G,EAAY,IACrCA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAC7B5G,EAAa,GAAK4G,EAAY,IACrCA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAC7B5G,EAAa,GAAK4G,EAAY,KACrCA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,OCd3BE,G,sCACjBL,KAAO,SAACC,EAAWC,EAAS/B,EAAYtG,EAAU0B,GAC9C,IAAM4G,EAAW,YAAOtI,GAEpB0B,EAAa,GAAK4G,EAAY,IAC9B5G,EAAa,GAAK4G,EAAY,IAE9BA,EAAY,IAAMhC,EAClBgC,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAEpC5G,EAAa,GAAK4G,EAAY,IAC9B5G,EAAa,GAAK4G,EAAY,IAE9BA,EAAY,IAAMhC,EAClBgC,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAEpC5G,EAAa,GAAK4G,EAAY,IAC9B5G,EAAa,GAAK4G,EAAY,IAE9BA,EAAY,IAAMhC,EAClBgC,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAEpC5G,EAAa,GAAK4G,EAAY,IAC9B5G,EAAa,GAAK4G,EAAY,IAE9BA,EAAY,IAAMhC,EAClBgC,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAEpC5G,EAAa,KAAO4G,EAAY,IAChC5G,EAAa,GAAK4G,EAAY,IAE9BA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAEpC5G,EAAa,KAAO4G,EAAY,IAChC5G,EAAa,GAAK4G,EAAY,IAE9BA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAEpC5G,EAAa,GAAK4G,EAAY,IAC9B5G,EAAa,KAAO4G,EAAY,IAEhCA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,KAEpC5G,EAAa,GAAK4G,EAAY,IAC9B5G,EAAa,KAAO4G,EAAY,KAEhCA,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,OCjD3BG,G,sFACjB,SAAOhC,EAAUT,EAAMO,GACnB,OAAQE,GACJ,IAAK,OASL,IAAK,SASL,IAAK,OACD,OAAO,IAAIN,EACP,SACA,CAAC,IAAK,KACN,IACA,GACAH,EACAO,GAGR,QACI,OAAO,K,qBAUnB,WACI,OAAO7F,KAAKV,W,oBAGhB,WACI,OAAOU,KAAKsF,S,KChDC0C,G,sFACjB,SAAOjC,EAAUT,EAAMO,GACnB,OAAQE,GACJ,IAAK,SACD,MAAO,CACH,IAAIN,EAAQ,UAAW,CAAC,IAAK,KAAM,EAAG,EAAGH,EAAMO,GAC/C,IAAIJ,EAAQ,SAAU,CAAC,IAAK,KAAM,GAAI,EAAGH,EAAMO,IAEvD,IAAK,SACD,MAAO,CACH,IAAIJ,EAAQ,UAAW,CAAC,IAAK,KAAM,EAAG,EAAGH,EAAMO,GAC/C,IAAIJ,EAAQ,SAAU,CAAC,IAAK,KAAM,GAAI,EAAGH,EAAMO,IAEvD,IAAK,OACD,MAAO,CACH,IAAIJ,EAAQ,UAAW,CAAC,IAAK,KAAM,EAAG,EAAGH,EAAMO,GAC/C,IAAIJ,EAAQ,SAAU,CAAC,IAAK,KAAM,GAAI,EAAGH,EAAMO,IAEvD,QACI,OAAO,K,qBAUnB,WACI,OAAO7F,KAAKV,W,oBAGhB,WACI,OAAOU,KAAKsF,S,KC/BC2C,G,WACjB,aAAe,oBACXjI,KAAK2G,MAAQ,QACb3G,KAAKgH,MAAQ,SACbhH,KAAKmH,MAAQ,UACbnH,KAAKkI,MAAQ,SACblI,KAAK4G,UAAY,OACjB5G,KAAK+G,UAAY,SACjB/G,KAAKkH,UAAY,OACjBlH,KAAKmI,cAAgB,IAAIrC,EACzB9F,KAAKoI,eAAiB,IAAIL,GAC1B/H,KAAKqI,gBAAkB,IAAIL,G,0CAG/B,SAAOM,EAAavC,EAAUT,EAAMO,GAChC,OAAQyC,GACJ,KAAKtI,KAAK2G,MACN,OAAO3G,KAAKmI,cAAczB,OACtBX,EACAT,EACAO,EAASa,OAAOX,IAExB,KAAK/F,KAAKgH,MACN,OAAOhH,KAAKoI,eAAe1B,OACvBX,EACAT,EACAO,EAASa,OAAOX,IAExB,KAAK/F,KAAKmH,MACN,OAAOnH,KAAKqI,gBAAgB3B,OACxBX,EACAT,EACAO,EAASa,OAAOX,IAExB,QACI,OAAO,O,KC1CFwC,G,sCACjBd,KAAO,SAACC,EAAWC,EAAS/B,EAAYtG,GACpC,IAAMsI,EAAW,YAAOtI,GACxBsI,EAAY,IAAMhC,EAClB+B,EAAQC,EAAY,GAAIA,EAAY,MCCvBY,G,sFACjB,SAAOF,EAAaG,GAChB,OAAQH,GACJ,IAAK,OACD,OAAO,IAAIC,GACf,IAAK,SACD,OAAO,IAAIV,GACf,IAAK,OACD,OAAO,IAAIC,GACf,QACI,OAAO,O,KCXFY,G,sFACjB,SAAOJ,EAAaG,GAChB,OAAQH,GACJ,IAAK,OACD,OAAO,IAAId,EACf,IAAK,SACD,OAAO,IAAIK,GACf,IAAK,OACD,OAAO,IAAIC,GACf,QACI,OAAO,O,KCVFa,G,sFACjB,SAAOF,GACH,OAAQA,GACJ,IAAK,OACD,OAAO,IAAIjB,EACf,IAAK,SACD,OAAO,IAAIK,GACf,IAAK,OACD,OAAO,IAAIC,GACf,QACI,OAAO,O,KCdFc,G,sCACjBnB,KAAO,SAACC,EAAWC,EAAS/B,EAAYtG,GACpCqI,EAAQrI,EAAS,GAAIA,EAAS,MCIjBuJ,G,sFACjB,SAAOP,EAAaG,GAChB,OAAQH,GACJ,IAAK,OACD,OAAO,IAAIM,GACf,IAAK,SACD,OAAO,IAAIf,GACf,IAAK,OACD,OAAO,IAAIC,GACf,QACI,OAAO,O,KCXFgB,G,WACjB,aAAe,oBACX9I,KAAK2G,MAAQ,QACb3G,KAAKgH,MAAQ,SACbhH,KAAKmH,MAAQ,UACbnH,KAAKkI,MAAQ,SACblI,KAAK8G,cAAgB,OACrB9G,KAAK8G,cAAgB,SACrB9G,KAAK8G,cAAgB,O,0CAEzB,SAAOwB,EAAaS,GAChB,OAAQT,GACJ,KAAKtI,KAAK2G,MACN,OAAO,IAAIgC,GAAqBI,GACpC,KAAK/I,KAAKgH,MACN,OAAO,IAAI0B,GAAsBK,GACrC,KAAK/I,KAAKmH,MACN,OAAO,IAAI0B,GAAuBE,GACtC,KAAK/I,KAAKkI,MACN,OAAO,IAAIM,GAAsBO,GAErC,QACI,OAAO,O,KCtBFC,G,WACjB,aAAe,oBACXhJ,KAAKgG,QAAUA,EACfhG,KAAKuH,aAAeA,EACpBvH,KAAKiJ,WAAahB,GAClBjI,KAAKkJ,aAAe,IAAI3B,EACxBvH,KAAKsG,MAAQtG,KAAKkJ,aAAaxC,OAAO,eACtC1G,KAAKuG,MAAQvG,KAAKkJ,aAAaxC,OAAO,aACtC1G,KAAKwG,MAAQxG,KAAKkJ,aAAaxC,OAAO,YACtC1G,KAAKmJ,kBAAoB,IAAIL,G,mDAGjC,WACI,OAAO,IAAI9I,KAAKgG,QACZ,IAAIhG,KAAKiJ,WACT,IAAIH,GACJ9I,KAAKkJ,aAAaxC,OAAO,eACzB1G,KAAKkJ,aAAaxC,OAAO,aACzB1G,KAAKkJ,aAAaxC,OAAO,iB,KCvBhB0C,GACjB,WAAYC,GAAM,oBACdrJ,KAAKqJ,IAAMA,EACXrJ,KAAKqJ,IAAI1D,UAAY,ICDR2D,G,sGACjB,SACIC,EACAC,EACAC,EACAC,GAEA,OACIH,EAAiB,GAAKC,EAAa,IAAMC,EAAkB,IAC3DF,EAAiB,IAAME,EAAkB,GAAKC,EAAc,KAGxDH,EAAiB,GAAKC,EAAa,IAAMC,EAAkB,IAC3DF,EAAiB,IAAME,EAAkB,GAAKC,EAAc,Q,KCE7D,SAASC,GAAazK,GACjC,IAAMsC,EAAchB,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKzC,eAEnDT,EAAiBP,EAAe0D,GAChCrC,EAAcrB,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKpC,eACnDE,EAAgBvB,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKlC,iBACrDiD,EAAaxE,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKnD,SAClD8I,EAAmB,IAAIN,GAEvBhI,EAAUd,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAK3C,WAC/CH,EAAWX,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAK9C,YAClDkE,EAAQ7E,EAAe2D,GACrB0F,EAASrJ,EAAewD,GACxB8F,EAAWtJ,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAK1C,kBAEhD8H,EAAMnK,EAAMmK,IACZ9E,EAAWjE,IAOjB,GALkB,WAAb+I,EAAI3D,MAAsBlE,IAC3B6D,EAAQyE,EACRxG,GAAkB,IAGlBvB,GAAiBiD,GAAc,EAAG,CACf,IAAIoE,GAAiBC,GACxC9E,EAASvB,GAAoB,IAGjC+G,qBAAU,WACNxF,EAASd,EAAkB4F,EAAI/D,SAChC,IAEHyE,qBAAU,WACN,IAAKhJ,IAAmBc,EAAa,CACjC,IAAM8D,EAAWqE,aAAY,WACzBX,EAAIxD,SAAS4B,KACO,GAAhBxH,KAAKE,SACLwH,EACA0B,EAAIzD,WACJP,EACAwE,KAELR,EAAI1D,UACP,OAAO,kBAAMsE,cAActE,OAEhC,CAACN,IAEJ0E,qBAAU,WACN,IAAKhJ,IAAmBc,GAA4B,WAAbwH,EAAI3D,KAAmB,CAC1D,IAAMC,EAAWqE,aAAY,WAGzBX,EAAIxD,SAAS4B,KACO,GAAhBxH,KAAKE,SACLwH,EACA0B,EAAIzD,WACJP,EACAwE,KAELR,EAAI1D,UACP,OAAO,kBAAMsE,cAActE,OAEhC,CAACN,IAEJ0E,qBAAU,WACUG,YAAW,WACvB3F,EAASjB,GAAkB,MAC5B,OACJ,CAAC9B,IAEJ,IAAMmG,EAAU,SAACwC,EAAWC,GACxB,IAAIC,EAAeF,EACfG,EAAeF,EACfG,EAAOnK,OAAOC,OAAOX,MACrB8K,EAAOpK,OAAOC,OAAOT,OAErBuK,GAAa,IACbE,EAAe,IAEfD,GAAa,KACbE,EAAe,IAEfH,GAAaI,EAAO,KACpBF,EAAeE,EAAO,IAEtBH,GAAaI,EAAO,MACpBF,EAAeE,EAAO,KAET,WAAbnB,EAAI3D,KACJnB,EAAShB,EAAc,CAAC8G,EAAcC,KACnC/F,EAASlB,EAAiB,CAACgH,EAAcC,MAepD,OAXIV,EAAiBa,uBACbZ,EACA1I,EACAkE,EACA/D,IAGJiD,EAAS3B,GAAe,IAIpBpB,EAGJ,qCACI,cAAC,EAAD,CAAU6D,MAAK,YAAMA,GAAQC,KAAM+D,EAAI/D,OACvC,cAAC,EAAD,CAAUD,MAAK,YAAMA,GAAQC,KAAM+D,EAAI/D,UAJ3C,cAAC,EAAD,CAAUD,MAAK,YAAMA,GAAQC,KAAM+D,EAAI/D,OCrHhC,SAASoF,KACpB,IAAM1F,EAAaxE,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKnD,SAClDoI,EAAe,IAAI3B,EAcnB8B,EAbS,IAAIsB,GAAOzB,GACD0B,kBAYHC,QAAQ7F,GAsB9B,OAAO,cAAC2E,GAAD,CAAcN,IAAKA,I,IC5CTyB,G,WACjB,WAAYxI,GAAQ,oBAChBtC,KAAKsC,MAAQA,E,wCAEjB,SAAKA,GACDyI,aAAaC,QACb,IAAIC,EAAI,EACR,IAAKA,KAAK3I,EACNyI,aAAaG,QAAQD,EAAG3I,EAAM2I,IAElC,OAAO,IAAIH,EAASxI,K,kBAExB,WAGI,IAFA,IAAI6I,EAAM,GAEDF,EAAI,EAAGA,EAAIF,aAAaK,OAAQH,IAAK,CAC1C,IAAII,EAAMN,aAAaM,IAAIJ,GACvBK,EAAcP,aAAaQ,QAAQF,GAEnCG,EAAWF,EAQXE,EANQ,mBAARH,GACQ,gBAARA,GACQ,eAARA,GACQ,UAARA,EAEQC,EAAYG,MAAM,KACTC,IAAIC,QACN,UAARN,GACKG,EAAS,GAEM,SAAhBF,EAEfH,EAAIE,GAAOG,EAEf,OAAOL,M,KCxBA,SAASS,KACpB,IAAIC,EAAW,IAAIf,GACbvG,EAAWjE,IACXgC,EAAQ9B,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,QACxChD,EAAcT,EAAe2D,GAC/B7B,EAAMR,aACNyC,EAAS1B,GAAW,IACpBgJ,EAASC,KAAKxJ,IAclB,OACI,sBAAKnD,UAAU,SAAf,UACI,uBAAMC,MAAO,CAAEK,MAAO,cAAtB,mBAA6C6C,EAAMxB,SACnD,wBACIiL,QAAS,WACLxH,EAAS1B,GAAW,KAF5B,kBAOA,wBAAQkJ,QAAS,kBArBZ,WACT,IAAIC,EAAIH,EAASI,OACjB1H,EAAST,EAAgBkI,IAmBEC,IAAvB,kBACA,wBAAQF,QAAS,kBAAMxH,EAASzB,GAAkB,KAAlD,mBAGA,wBAAQiJ,QAAS,kBApBZ,WACT,IAAMG,EAAc,YAAOjL,GAC3BiL,EAAe,IAAM,EACrB3H,EAASzB,GAAkB,IAC3ByB,EAAShB,EAAc2I,IAgBIC,IAAvB,qBC3CZ,SAASC,KACL,OAAO,qBAAKjN,UAAU,mBAGXU,WAAMC,KAAKsM,ICPLC,G,WACjB,WACI/M,GAOD,IAAD,OANEgN,EAMF,uDANe,OACbnC,EAKF,uDALc,EACZC,EAIF,uDAJc,EACZtJ,EAGF,uDAHU,EACR8E,EAEF,uDAFe,GACbjG,EACF,uDADS,CAAC,GAAI,IACd,yBAWF8H,KAAO,SAAC8E,EAASC,GACb,OAAQD,GACJ,KAAK,GACD,EAAKpC,WAAa,EAAKvE,WACvB4G,EAAS,EAAKrC,UAAW,EAAKC,WAC9B,MACJ,KAAK,GACD,EAAKA,WAAa,EAAKxE,WACvB4G,EAAS,EAAKrC,UAAW,EAAKC,WAC9B,MACJ,KAAK,GACD,EAAKD,WAAa,EAAKvE,WACvB4G,EAAS,EAAKrC,UAAW,EAAKC,WAC9B,MACJ,KAAK,GACD,EAAKA,WAAa,EAAKxE,WACvB4G,EAAS,EAAKrC,UAAW,EAAKC,aA1BtCpK,KAAKsM,WAAaA,EAClBtM,KAAKmK,UAAYA,EACjBnK,KAAKoK,UAAYA,EACjBpK,KAAKL,KAAOA,EACZK,KAAK4F,WAAaA,EAClB5F,KAAKc,MAAQA,EACbd,KAAKP,MAAQ,QACbO,KAAKyM,YAAc,E,2CAyBvB,SAAQT,EAAGU,GACP1M,KAAKmK,UAAY6B,EACjBhM,KAAKoK,UAAYsC,M,KCtCzB,SAASC,GAAUzN,GACf,OACI,qBACIC,UAAU,iBACVC,MAAO,CACHC,IAAKH,EAAM2K,OAAO,GAClBtK,KAAML,EAAM2K,OAAO,GACnBnK,MAAOR,EAAMiC,SAAS,GACtBvB,OAAQV,EAAMiC,SAAS,GACvBoE,kBAAmB,KAMpB1F,WAAMC,KAAK6M,IChBX,SAASC,KACpB,IAAMrI,EAAWjE,IAKjB,OACI,sBAAKnB,UAAU,iBAAf,UACI,qBAAKA,UAAU,eAAf,wBACA,8BACI,wBAAQA,UAAU,cAAc4M,QAAS,kBAPjDxH,EAAS3B,GAAe,SACxB2B,EAAST,EAAgBpD,KAMjB,6BCGD,SAASmM,GAAK3N,GACzB,IAAM2K,EAASrJ,EAAewD,GAGxB8I,GAFctM,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKtC,eACpCnB,EAAe4D,GACd5D,EAAe0D,IAK/BK,GAJkB/D,GACpB,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKrC,mBAGTtB,KACXyM,EAAU7N,EAAM6N,QACtBxI,EAASrB,EAAmB6J,EAAQpN,OACpC,IAAMqN,EAAqBC,uBAAY,SAACC,GACpC,IAAQX,EAAYW,EAAZX,QACJA,GAAW,IAAMA,GAAW,IAC5BQ,EAAQtF,KAAK8E,EAASC,KAE3B,IACHpM,OAAO+M,iBAAiB,UAAWH,GAEnC,IAAMR,EAAW,SAACrC,EAAWC,GACzB,IAAIC,EAAeF,EACfG,EAAeF,EACfG,EAAOnK,OAAOC,OAAOX,MACrB8K,EAAOpK,OAAOC,OAAOT,OAErBuK,GAAa,IACbE,EAAe,IAEfD,GAAa,KACbE,EAAe,IAEfH,GAAaI,EAAO,KACpBF,EAAeE,EAAO,IAEtBH,GAAaI,EAAO,MACpBF,EAAeE,EAAO,KAE1BjG,EAAStB,EAAe,CAACoH,EAAcC,KACvCyC,EAAQK,QAAQ/C,EAAcC,IAOlC,OAAOwC,EACH,cAACF,GAAD,IAEA,8BACI,cAAC,GAAD,CAAW/C,OAAQA,EAAQ1I,SAAU4L,EAAQpN,SChE1C,SAAS0N,GAASnO,GAC7B,IAAM6N,EAAU,IAAIV,GACpB,OACI,mCAEI,cAACQ,GAAD,CAAME,QAASA,MCGZ,SAASO,KACpB,IAAM/I,EAAWjE,IAEXa,EAAWX,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAK9C,YAEhD0I,EAASrJ,EAAewD,GAExBuJ,EAAS/M,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKvC,gBAC9C8L,EAAQhN,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKtC,eAC7C8L,EAAYjN,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKrC,mBACjDR,EAAWZ,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAK7C,YAEhDwI,EAAmB,IAAIN,GA4D7B,OAxDIM,EAAiBa,uBACbZ,EACA1I,EACAqM,EACApM,IAGJmD,EAASxB,GAAiB,IAG1B6G,EAAiBa,uBACbZ,EACA1I,EACAoM,EACAnM,KAGJ6D,QAAQC,IAAI,YACZD,QAAQC,IAAI2E,EAAQ1I,EAAUoM,EAAQnM,GACtCmD,EAAS5B,KACT4B,EAASxB,GAAiB,IAC1BwB,EAASvB,GAAoB,IAC7BuB,EAASX,EAAsB,CAAC,IAAK,QAIrCgG,EAAiBa,uBACbZ,EACA1I,EACAsM,EACArM,IAGJmD,EAASvB,GAAoB,KAuB1B,ECtCI0K,OAnCf,WAeI,OAdoBlN,GAAe,SAAC8B,GAAD,OAAWA,EAAM2B,KAAKtD,eAsBrD,cAPA,CAOA,sBACI,cAACiL,GAAD,IACA,cAAC,GAAD,IACA,cAACyB,GAAD,IACA,cAACtI,EAAD,IACA,cAAC2F,GAAD,IACA,cAAC4C,GAAD,QCpCCK,GAAQC,YAAe,CAClCC,QAAS,CACP5J,KAAMhC,KCMJ6L,GAAcC,QACW,cAA7B3N,OAAO4N,SAASC,UAEe,UAA7B7N,OAAO4N,SAASC,UAEhB7N,OAAO4N,SAASC,SAASC,MACvB,2DA2CN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtM,QACfgM,UAAUC,cAAcQ,YAI1B9J,QAAQC,IACN,iHAKEmJ,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBzJ,QAAQC,IAAI,sCAGRmJ,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAACC,GACNlK,QAAQkK,MAAM,4CAA6CA,MC7FjEC,IAASxK,OACP,cAAC,IAAMyK,WAAP,UACE,cAAC,IAAD,CAAU1B,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJ2B,SAASC,eAAe,SDanB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,YAAwBrP,OAAO4N,SAAS0B,MACpDC,SAAWvP,OAAO4N,SAAS2B,OAIvC,OAGFvP,OAAO+M,iBAAiB,QAAQ,WAC9B,IAAMiB,EAAK,UAAMqB,YAAN,sBAEP3B,KAgEV,SAAiCM,EAAeC,GAE9CuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5BpB,MAAK,SAACqB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAACC,GAClCA,EAAa0B,aAAa3B,MAAK,WAC7BrO,OAAO4N,SAASqC,eAKpBlC,GAAgBC,EAAOC,MAG1Ba,OAAM,WACLjK,QAAQC,IACN,oEAvFAoL,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCxJ,QAAQC,IACN,iHAMJiJ,GAAgBC,EAAOC,OCnC/BE,I","file":"static/js/main.f1905679.chunk.js","sourcesContent":["import React from 'react'\r\nimport BaseItem from '../classes/items/baseItem'\r\nimport './../styles/gameStyles.css'\r\n\r\nfunction ItemModel(props) {\r\n    return (\r\n        <div\r\n            className='itemModelStyle'\r\n            style={{\r\n                top: props.position[1],\r\n                left: props.position[0],\r\n                borderColor: props.color,\r\n                width: props.size[0],\r\n                height: props.size[1],\r\n\r\n                // backgroundColor: props.item[2]\r\n            }}\r\n        ></div>\r\n    )\r\n}\r\nexport default React.memo(ItemModel)\r\n","import ItemModel from \"../../components/ItemModel\"\r\n\r\nexport default class BaseItem {\r\n    constructor() {\r\n        this.position = [\r\n            Math.ceil(Math.random() * 0.7 * window.screen.width + 50),\r\n            Math.ceil(Math.random() * 0.7 * window.screen.height + 50),\r\n        ]\r\n        this.size = [20, 20]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ItemModel\r\n                position={this.position}\r\n                color={\"white\"}\r\n                size={this.size}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { RootState } from \"../app/store\"\r\n\r\nexport interface GameState {\r\n    startStatus: boolean\r\n    difficultyStatus: number\r\n    heroName: string\r\n    level: number\r\n    gameOverStatus: boolean\r\n\r\n    heroPosition: number[]\r\n    botPosition: number[]\r\n    bot2Position: number[]\r\n\r\n    botSize: number[]\r\n    heroSize: number[]\r\n    itemSize: number[]\r\n    bot2Size: number[]\r\n\r\n    bulletPosition: number[]\r\n    bulletState: boolean\r\n    bulletSize: number[]\r\n\r\n    exitPosition: number[]\r\n    keyPosition: number[]\r\n    boosterPosition: number[]\r\n    pauseStatus: boolean\r\n    saveStatus: boolean\r\n    boosterStatus: boolean\r\n    keyForExit: boolean\r\n}\r\n\r\nexport const initialState: GameState = {\r\n    startStatus: false,\r\n    difficultyStatus: 0,\r\n    heroName: \"Ordinary Hero\",\r\n    level: 1,\r\n    gameOverStatus: false,\r\n\r\n    heroPosition: [20, 60],\r\n    botPosition: [500, 500],\r\n    bot2Position: [500, 500],\r\n\r\n    heroSize: [],\r\n    itemSize: [],\r\n\r\n    bot2Size: [],\r\n    botSize: [],\r\n\r\n    bulletPosition: [],\r\n    bulletState: false,\r\n    bulletSize: [],\r\n\r\n    exitPosition: [],\r\n    keyPosition: [0, 0],\r\n    boosterPosition: [0, 0],\r\n\r\n    pauseStatus: false,\r\n    saveStatus: false,\r\n\r\n    boosterStatus: false,\r\n    keyForExit: false,\r\n}\r\n\r\nexport const gameSlice = createSlice({\r\n    name: \"game\",\r\n    initialState,\r\n    reducers: {\r\n        difficultyStatusAction: (state, action: PayloadAction<number>) => {\r\n            state.difficultyStatus = action.payload\r\n        },\r\n        heroNameAction: (state, action: PayloadAction<string>) => {\r\n            state.heroName = action.payload\r\n        },\r\n        startStatusAction: (state) => {\r\n            state.startStatus = true\r\n        },\r\n\r\n        levelUpAction: (state) => {\r\n            state.level += 1\r\n        },\r\n\r\n        gameOverAction: (state, action: PayloadAction<boolean>) => {\r\n            state.gameOverStatus = action.payload\r\n        },\r\n        saveAction: (state, action: PayloadAction<boolean>) => {\r\n            state.saveStatus = action.payload\r\n        },\r\n        pauseStatusAction: (state, action: PayloadAction<boolean>) => {\r\n            state.pauseStatus = action.payload\r\n        },\r\n\r\n        keyForExitAction: (state, action: PayloadAction<boolean>) => {\r\n            state.keyForExit = action.payload\r\n        },\r\n        boosterStatusAction: (state, action: PayloadAction<boolean>) => {\r\n            state.boosterStatus = action.payload\r\n        },\r\n\r\n        heroMoveAction: (state, action: PayloadAction<number[]>) => {\r\n            state.heroPosition = action.payload\r\n        },\r\n        heroSizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.heroSize = action.payload\r\n        },\r\n        itemSizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.itemSize = action.payload\r\n        },\r\n\r\n        bulletSizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.bulletSize = action.payload\r\n        },\r\n        bulletMoveAction: (state, action: PayloadAction<number[]>) => {\r\n            state.bulletPosition = action.payload\r\n        },\r\n        bulletStateAction: (state, action: PayloadAction<boolean>) => {\r\n            state.bulletState = action.payload\r\n        },\r\n\r\n        botMoveAction: (state, action: PayloadAction<number[]>) => {\r\n            state.botPosition = action.payload\r\n        },\r\n        bot2MoveAction: (state, action: PayloadAction<number[]>) => {\r\n            state.bot2Position = action.payload\r\n        },\r\n        botSizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.botSize = action.payload\r\n        },\r\n        bot2SizeInitAction: (state, action: PayloadAction<number[]>) => {\r\n            state.bot2Size = action.payload\r\n        },\r\n\r\n        keyPositionSetPositionAction: (\r\n            state,\r\n            action: PayloadAction<number[]>\r\n        ) => {\r\n            state.keyPosition = action.payload\r\n        },\r\n        exitSetPositionAction: (state, action: PayloadAction<number[]>) => {\r\n            state.exitPosition = action.payload\r\n        },\r\n        boosterSetPositionAction: (state, action: PayloadAction<number[]>) => {\r\n            state.boosterPosition = action.payload\r\n        },\r\n\r\n        loadStateAction: (state, action: PayloadAction<GameState>) => {\r\n            state.heroPosition = action.payload.heroPosition\r\n\r\n            state.botPosition = action.payload.botPosition\r\n            state.bot2Position = action.payload.bot2Position\r\n\r\n            state.gameOverStatus = action.payload.gameOverStatus\r\n            state.saveStatus = action.payload.saveStatus\r\n            state.level = action.payload.level\r\n\r\n            state.bot2Size = action.payload.bot2Size\r\n            state.botSize = action.payload.botSize\r\n\r\n            state.keyPosition = action.payload.keyPosition\r\n            state.exitPosition = action.payload.exitPosition\r\n\r\n            // state = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    difficultyStatusAction,\r\n    levelUpAction,\r\n    gameOverAction,\r\n    pauseStatusAction,\r\n    startStatusAction,\r\n\r\n    heroMoveAction,\r\n    heroSizeInitAction,\r\n    heroNameAction,\r\n    botMoveAction,\r\n    botSizeInitAction,\r\n    bot2MoveAction,\r\n    bot2SizeInitAction,\r\n\r\n    loadStateAction,\r\n    saveAction,\r\n    keyForExitAction,\r\n    keyPositionSetPositionAction,\r\n    exitSetPositionAction,\r\n    boosterSetPositionAction,\r\n    boosterStatusAction,\r\n    itemSizeInitAction,\r\n\r\n    bulletSizeInitAction,\r\n    bulletMoveAction,\r\n    bulletStateAction,\r\n} = gameSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectHeroPosition = (state: RootState) => state.game.heroPosition\r\nexport const selectLevel = (state: RootState) => state.game.level\r\nexport const selectGameOverStatus = (state: RootState) =>\r\n    state.game.gameOverStatus\r\nexport const selectBotPosition = (state: RootState) => state.game.botPosition\r\nexport const selectItemPosition = (state: RootState) => state.game.keyPosition\r\nexport const selectExitPosition = (state: RootState) => state.game.exitPosition\r\n\r\n// export const incrementIfOdd = (amount: number) => (\r\n//   dispatch,\r\n//   getState\r\n// ) => {\r\n//   const currentValue = selectCount(getState());\r\n//   if (currentValue % 2 === 1) {\r\n//     dispatch(incrementByAmount(amount));\r\n//   }\r\n// };\r\n\r\nexport default gameSlice.reducer\r\n","import { useAppDispatch, useAppSelector } from '../app/hooks'\r\nimport {\r\n    boosterSetPositionAction,\r\n    exitSetPositionAction,\r\n    itemSizeInitAction,\r\n    keyPositionSetPositionAction,\r\n    selectHeroPosition,\r\n} from '../redux/gameSlice'\r\nimport { useEffect } from 'react'\r\nimport ItemModel from '../components/ItemModel'\r\n\r\nexport default function ItemContainer(props) {\r\n    const heroXY = useAppSelector(selectHeroPosition)\r\n    const keyStatus = useAppSelector((state) => state.game.keyForExit)\r\n\r\n    // const exitPosition = useAppSelector(selectExitPosition)\r\n    // const itemPosition = useAppSelector(selectItemPosition)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const keyItem = props.keyItem\r\n    const exit = props.exit\r\n    const booster = props.booster\r\n\r\n    dispatch(itemSizeInitAction(exit.item.size))\r\n    dispatch(exitSetPositionAction(exit.item.position))\r\n    dispatch(keyPositionSetPositionAction(keyItem.position))\r\n    dispatch(boosterSetPositionAction(booster.position))\r\n\r\n    // const heroXY = props.heroXY\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(exitSetPositionAction(exit.item.position))\r\n    //     dispatch(keyPositionSetPositionAction(keyItem.position))\r\n    //     dispatch(boosterSetPositionAction(booster.position))\r\n    // }, [])\r\n\r\n    // if (\r\n    //     heroXY[0] + 20 >= exit.position[0] &&\r\n    //     heroXY[0] <= exit.position[0] + 20\r\n    // ) {\r\n    //     console.log(\"check\")\r\n\r\n    //     if (\r\n    //         heroXY[1] + 20 >= exit.position[1] &&\r\n    //         heroXY[1] <= exit.position[1] + 20\r\n    //     ) {\r\n    //         dispatch(levelUpAction())\r\n    //         dispatch(exitSetPositionAction([600, 600]))\r\n    //     }\r\n    // }\r\n\r\n    // dispatch(exitSetPositionAction([exit.position]))\r\n    // dispatch(itemSetPositionAction([newItem.position]))\r\n\r\n    return (\r\n        <>\r\n            {/* exit.returnComponent() */}\r\n            {/* <ItemModel\r\n                position={keyItem.position}\r\n                color={\"white\"}\r\n                size={keyItem.size}\r\n            />\r\n            <ItemModel\r\n                position={exit.item.position}\r\n                color={\"white\"}\r\n                size={exit.item.size}\r\n            />\r\n            <ItemModel\r\n                position={booster.position}\r\n                color={\"white\"}\r\n                size={booster.size}\r\n            /> */}\r\n\r\n            {props.booster.render()}\r\n            {keyItem.render()}\r\n            {exit.render(keyStatus)}\r\n        </>\r\n    )\r\n}\r\n","import ItemModel from \"../../components/ItemModel\"\r\nimport ItemContainer from \"../../containers/itemContainer\"\r\n\r\nexport default class ProxyItem {\r\n    constructor(item) {\r\n        this.item = item\r\n    }\r\n    render(cases) {\r\n        switch (cases) {\r\n            case false:\r\n                return (\r\n                    <ItemModel\r\n                        position={this.item.position}\r\n                        color={\"transparent\"}\r\n                        size={this.item.size}\r\n                    />\r\n                )\r\n            case true:\r\n                return this.item.render()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import BaseItem from '../classes/items/baseItem'\r\nimport ItemContainer from './itemContainer'\r\nimport ProxyItem from '../classes/items/proxyItem'\r\nimport { useAppSelector } from '../app/hooks'\r\n\r\nexport default function ItemInit() {\r\n    const levelState = useAppSelector((state) => state.game.level) //it's for items refresh\r\n    console.log(levelState)\r\n    const keyItem = new BaseItem()\r\n    const exit = new BaseItem()\r\n    const proxyExit = new ProxyItem(exit)\r\n    const booster = new BaseItem()\r\n\r\n    console.log(proxyExit)\r\n\r\n    return (\r\n        <>\r\n            <ItemContainer\r\n                keyItem={keyItem}\r\n                exit={proxyExit}\r\n                booster={booster}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './../styles/gameStyles.css'\r\n\r\nfunction BotModel(props) {\r\n    return (\r\n        <div\r\n            className='botModelStyle'\r\n            style={{\r\n                top: props.botXY[1],\r\n                left: props.botXY[0],\r\n                width: props.form[0],\r\n                height: props.form[1],\r\n                borderInlineWidth: 4,\r\n                backgroundColor: props.color,\r\n            }}\r\n        ></div>\r\n    )\r\n}\r\n\r\nexport default React.memo(BotModel)\r\n","import BotModel from \"../../components/BotModel\"\r\n\r\nexport default class BaseBot {\r\n    constructor(type, position, interval, moveLength, form, strategy) {\r\n        this.type = type\r\n        this.position = position\r\n        // this.health = 0 //TODO\r\n        this.interval = interval\r\n        this.moveLength = moveLength\r\n        this.form = form //the bridge realisation\r\n        this.strategy = strategy\r\n    }\r\n\r\n    returnComponent(botXY) {\r\n        return <BotModel botXY={[...botXY]} form={this.form} />\r\n    }\r\n}\r\n","//this is the fabric\r\n\r\nimport Mover from '../action/movers'\r\nimport BaseBot from '../baseBotClass'\r\n\r\nexport default class MoversFactory {\r\n    create(botLevel, form, strategy) {\r\n        switch (botLevel) {\r\n            case 'easy':\r\n                return new BaseBot('mover', [300, 300], 60, 10, form, strategy)\r\n            case 'normal':\r\n                return new BaseBot('mover', [300, 300], 60, 10, form, strategy)\r\n            case 'hard':\r\n                return new BaseBot('mover', [300, 300], 60, 10, form, strategy)\r\n\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n    // constructor(form) {\r\n    //     super(form)\r\n\r\n    //     this.xPosition = 120\r\n    //     this.yPosition = 120\r\n    // }\r\n\r\n    getPose() {\r\n        return this.position\r\n    }\r\n\r\n    toForm() {\r\n        return this.form\r\n    }\r\n}\r\n","export default class Command {\r\n    constructor(\r\n        abstractBotFactory,\r\n        strategyFactory,\r\n        smallSquareForm,\r\n        bigSquareForm,\r\n        highLineForm\r\n    ) {\r\n        this.abstractBotFactory = abstractBotFactory\r\n        this.strategyFactory = strategyFactory\r\n        this.form1 = smallSquareForm\r\n        this.form2 = bigSquareForm\r\n        this.form3 = highLineForm\r\n    }\r\n    execute(command) {\r\n        switch (command) {\r\n            case 1:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case1,\r\n                    this.abstractBotFactory.botLevel1,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case1,\r\n                        this.strategyFactory.strategyType1\r\n                    )\r\n                )\r\n            case 2:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case1,\r\n                    this.abstractBotFactory.botLevel2,\r\n                    this.form2.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case2,\r\n                        this.strategyFactory.strategyType2\r\n                    )\r\n                )\r\n            case 3:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case1,\r\n                    this.abstractBotFactory.botLevel3,\r\n                    this.form3.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case3,\r\n                        this.strategyFactory.strategyType3\r\n                    )\r\n                )\r\n            case 4:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case2,\r\n                    this.abstractBotFactory.botLevel1,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case1,\r\n                        this.strategyFactory.strategyType1\r\n                    )\r\n                )\r\n            case 5:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case2,\r\n                    this.abstractBotFactory.botLevel2,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case2,\r\n                        this.strategyFactory.strategyType2\r\n                    )\r\n                )\r\n            case 6:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case2,\r\n                    this.abstractBotFactory.botLevel3,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case3,\r\n                        this.strategyFactory.strategyType3\r\n                    )\r\n                )\r\n            case 7:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case3,\r\n                    this.abstractBotFactory.botLevel1,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case1,\r\n                        this.strategyFactory.strategyType1\r\n                    )\r\n                )\r\n            case 8:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case3,\r\n                    this.abstractBotFactory.botLevel2,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case2,\r\n                        this.strategyFactory.strategyType2\r\n                    )\r\n                )\r\n            case 9:\r\n                return this.abstractBotFactory.create(\r\n                    this.abstractBotFactory.case3,\r\n                    this.abstractBotFactory.botLevel3,\r\n                    this.form1.getForm(),\r\n                    this.strategyFactory.create(\r\n                        this.strategyFactory.case3,\r\n                        this.strategyFactory.strategyType3\r\n                    )\r\n                )\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","export default class FormBaseClass {\r\n    constructor(array, color) {\r\n        this.height = array[0]\r\n        this.width = array[1]\r\n        this.color = color\r\n    }\r\n\r\n    getForm() {\r\n        return [this.width, this.height]\r\n    }\r\n    // getForm() {\r\n    //     return ([this.height, this.width])\r\n    // }\r\n    // getHeight() {\r\n    //     return (this.height)\r\n    // }\r\n    // getWidth() {\r\n    //     return (this.width)\r\n    // }\r\n}\r\n","import FormBaseClass from \"./baseForms\"\r\n\r\nexport default class FormsFactory {\r\n    create(type) {\r\n        switch (type) {\r\n            case \"smallSquare\":\r\n                return new FormBaseClass([16, 16])\r\n            case \"bigSquare\":\r\n                return new FormBaseClass([38, 38])\r\n            case \"wideLine\":\r\n                return new FormBaseClass([16, 78])\r\n            case \"highLine\":\r\n                return new FormBaseClass([78, 16])\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","export default class MoveRandom {\r\n    move = (direction, moveBot, moveLength, position) => {\r\n        const newPosition = [...position]\r\n        if (direction <= 2.5) {\r\n            newPosition[0] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (direction > 2.5 && direction <= 5) {\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (direction > 5 && direction <= 7.5) {\r\n            newPosition[0] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else {\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        }\r\n    }\r\n}\r\n","export default class MoveFourDirections {\r\n    move = (direction, moveBot, moveLength, position, heroPosition) => {\r\n        const newPosition = [...position]\r\n        if (heroPosition[0] < newPosition[0]) {\r\n            newPosition[0] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (heroPosition[0] > newPosition[0]) {\r\n            newPosition[0] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (heroPosition[1] > newPosition[1]) {\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (heroPosition[1] < newPosition[1]) {\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        }\r\n        //  else if (\r\n        //     heroPosition[0] === newPosition[0] &&\r\n        //     heroPosition[1] > newPosition[1]\r\n        // ) {\r\n        //     newPosition[1] += moveLength\r\n        //     moveBot(newPosition[0], newPosition[1])\r\n        // } else if (\r\n        //     heroPosition[0] === newPosition[0] &&\r\n        //     heroPosition[1] < newPosition[1]\r\n        // ) {\r\n        //     newPosition[1] -= moveLength\r\n        //     moveBot(newPosition[0], newPosition[1])\r\n        // } else if (\r\n        //     heroPosition[0] > newPosition[0] &&\r\n        //     heroPosition[1] === newPosition[1]\r\n        // ) {\r\n        //     newPosition[0] += moveLength\r\n        //     moveBot(newPosition[0], newPosition[1])\r\n        // } else if (\r\n        //     heroPosition[0] < newPosition[0] &&\r\n        //     heroPosition[1] === newPosition[1]\r\n        // ) {\r\n        //     newPosition[0] -= moveLength\r\n        //     moveBot(newPosition[0], newPosition[1])\r\n        // }\r\n    }\r\n}\r\n","export default class MoveEightDirections {\r\n    move = (direction, moveBot, moveLength, position, heroPosition) => {\r\n        const newPosition = [...position]\r\n        if (\r\n            heroPosition[0] < newPosition[0] &&\r\n            heroPosition[1] < newPosition[1]\r\n        ) {\r\n            newPosition[0] -= moveLength\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] > newPosition[0] &&\r\n            heroPosition[1] < newPosition[1]\r\n        ) {\r\n            newPosition[0] += moveLength\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] > newPosition[0] &&\r\n            heroPosition[1] > newPosition[1]\r\n        ) {\r\n            newPosition[0] += moveLength\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] < newPosition[0] &&\r\n            heroPosition[1] > newPosition[1]\r\n        ) {\r\n            newPosition[0] -= moveLength\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] === newPosition[0] &&\r\n            heroPosition[1] > newPosition[1]\r\n        ) {\r\n            newPosition[1] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] === newPosition[0] &&\r\n            heroPosition[1] < newPosition[1]\r\n        ) {\r\n            newPosition[1] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] > newPosition[0] &&\r\n            heroPosition[1] === newPosition[1]\r\n        ) {\r\n            newPosition[0] += moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        } else if (\r\n            heroPosition[0] < newPosition[0] &&\r\n            heroPosition[1] === newPosition[1]\r\n        ) {\r\n            newPosition[0] -= moveLength\r\n            moveBot(newPosition[0], newPosition[1])\r\n        }\r\n    }\r\n}\r\n","//this is the fabric\r\n\r\nimport Mover from '../action/movers'\r\nimport BaseBot from '../baseBotClass'\r\n\r\nexport default class JumpersFactory {\r\n    create(botLevel, form, strategy) {\r\n        switch (botLevel) {\r\n            case 'easy':\r\n                return new BaseBot(\r\n                    'jumper',\r\n                    [300, 300],\r\n                    500,\r\n                    50,\r\n                    form,\r\n                    strategy\r\n                )\r\n            case 'normal':\r\n                return new BaseBot(\r\n                    'jumper',\r\n                    [300, 300],\r\n                    500,\r\n                    50,\r\n                    form,\r\n                    strategy\r\n                )\r\n            case 'hard':\r\n                return new BaseBot(\r\n                    'jumper',\r\n                    [300, 300],\r\n                    500,\r\n                    50,\r\n                    form,\r\n                    strategy\r\n                )\r\n\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n    // constructor(form) {\r\n    //     super(form)\r\n\r\n    //     this.xPosition = 120\r\n    //     this.yPosition = 120\r\n    // }\r\n\r\n    getPose() {\r\n        return this.position\r\n    }\r\n\r\n    toForm() {\r\n        return this.form\r\n    }\r\n}\r\n","//this is the fabric\r\n\r\nimport BaseBot from '../baseBotClass'\r\n\r\nexport default class ShootersFactory {\r\n    create(botLevel, form, strategy) {\r\n        switch (botLevel) {\r\n            case 'simple':\r\n                return [\r\n                    new BaseBot('shooter', [800, 300], 0, 0, form, strategy),\r\n                    new BaseBot('bullet', [800, 300], 50, 2, form, strategy),\r\n                ]\r\n            case 'normal':\r\n                return [\r\n                    new BaseBot('shooter', [800, 300], 0, 0, form, strategy),\r\n                    new BaseBot('bullet', [800, 300], 40, 3, form, strategy),\r\n                ]\r\n            case 'hard':\r\n                return [\r\n                    new BaseBot('shooter', [800, 300], 0, 0, form, strategy),\r\n                    new BaseBot('bullet', [800, 300], 30, 4, form, strategy),\r\n                ]\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n    // constructor(form) {\r\n    //     super(form)\r\n\r\n    //     this.xPosition = 120\r\n    //     this.yPosition = 120\r\n    // }\r\n\r\n    getPose() {\r\n        return this.position\r\n    }\r\n\r\n    toForm() {\r\n        return this.form\r\n    }\r\n}\r\n","//this is the abstract factory\r\n\r\nimport BulletFactory from './botFactories/bulletFactory'\r\nimport JumpersFactory from './botFactories/jumperFactory'\r\nimport MoversFactory from './botFactories/moversFactory'\r\nimport ShootersFactory from './botFactories/shootersFactory'\r\n\r\nexport default class AbstractBotFactory {\r\n    constructor() {\r\n        this.case1 = 'mover'\r\n        this.case2 = 'jumper'\r\n        this.case3 = 'shooter'\r\n        this.case4 = 'bullet'\r\n        this.botLevel1 = 'easy'\r\n        this.botLevel2 = 'normal'\r\n        this.botLevel3 = 'hard'\r\n        this.moversFactory = new MoversFactory()\r\n        this.jumpersFactory = new JumpersFactory()\r\n        this.shootersFactory = new ShootersFactory()\r\n    }\r\n\r\n    create(factoryType, botLevel, form, strategy) {\r\n        switch (factoryType) {\r\n            case this.case1:\r\n                return this.moversFactory.create(\r\n                    botLevel,\r\n                    form,\r\n                    strategy.create(botLevel)\r\n                )\r\n            case this.case2:\r\n                return this.jumpersFactory.create(\r\n                    botLevel,\r\n                    form,\r\n                    strategy.create(botLevel)\r\n                )\r\n            case this.case3:\r\n                return this.shootersFactory.create(\r\n                    botLevel,\r\n                    form,\r\n                    strategy.create(botLevel)\r\n                )\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","export default class MoveLeft {\r\n    move = (direction, moveBot, moveLength, position) => {\r\n        const newPosition = [...position]\r\n        newPosition[0] -= moveLength\r\n        moveBot(newPosition[0], newPosition[1])\r\n    }\r\n}\r\n","import MoveEightDirections from \"../strategies/moveEightDirections\"\r\nimport MoveFourDirections from \"../strategies/moveFourDirections\"\r\nimport MoveLeft from \"../strategies/moveLeft\"\r\nimport MoveRandom from \"../strategies/moveRandom\"\r\n\r\nexport default class BulletStrategyFactory {\r\n    create(factoryType, botType) {\r\n        switch (factoryType) {\r\n            case \"easy\":\r\n                return new MoveLeft()\r\n            case \"normal\":\r\n                return new MoveFourDirections()\r\n            case \"hard\":\r\n                return new MoveEightDirections()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import MoveEightDirections from \"../strategies/moveEightDirections\"\r\nimport MoveFourDirections from \"../strategies/moveFourDirections\"\r\nimport MoveRandom from \"../strategies/moveRandom\"\r\n\r\nexport default class JumperStrategyFactory {\r\n    create(factoryType, botType) {\r\n        switch (factoryType) {\r\n            case \"easy\":\r\n                return new MoveRandom()\r\n            case \"normal\":\r\n                return new MoveFourDirections()\r\n            case \"hard\":\r\n                return new MoveEightDirections()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import MoveEightDirections from '../strategies/moveEightDirections'\r\nimport MoveFourDirections from '../strategies/moveFourDirections'\r\nimport MoveRandom from '../strategies/moveRandom'\r\n\r\nexport default class MoverStrategyFactory {\r\n    create(botType) {\r\n        switch (botType) {\r\n            case 'easy':\r\n                return new MoveRandom()\r\n            case 'normal':\r\n                return new MoveFourDirections()\r\n            case 'hard':\r\n                return new MoveEightDirections()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","export default class Stand {\r\n    move = (direction, moveBot, moveLength, position) => {\r\n        moveBot(position[0], position[1])\r\n    }\r\n}\r\n","import MoveEightDirections from \"../strategies/moveEightDirections\"\r\nimport MoveFourDirections from \"../strategies/moveFourDirections\"\r\nimport MoveLeft from \"../strategies/moveLeft\"\r\nimport MoveRandom from \"../strategies/moveRandom\"\r\nimport Stand from \"../strategies/stand\"\r\n\r\nexport default class ShooterStrategyFactory {\r\n    create(factoryType, botType) {\r\n        switch (factoryType) {\r\n            case \"easy\":\r\n                return new Stand()\r\n            case \"normal\":\r\n                return new MoveFourDirections()\r\n            case \"hard\":\r\n                return new MoveEightDirections()\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import BulletStrategyFactory from './bulletStrategyFactory'\r\nimport JumperStrategyFactory from './jumperStrategyFactory'\r\nimport MoverStrategyFactory from './moverStrategyFactory'\r\nimport ShooterStrategyFactory from './shooterStrategyFactory'\r\n\r\nexport default class BotStrategyFactory {\r\n    constructor() {\r\n        this.case1 = 'mover'\r\n        this.case2 = 'jumper'\r\n        this.case3 = 'shooter'\r\n        this.case4 = 'bullet'\r\n        this.strategyType1 = 'easy'\r\n        this.strategyType1 = 'normal'\r\n        this.strategyType1 = 'hard'\r\n    }\r\n    create(factoryType, strategyType) {\r\n        switch (factoryType) {\r\n            case this.case1:\r\n                return new MoverStrategyFactory(strategyType)\r\n            case this.case2:\r\n                return new JumperStrategyFactory(strategyType)\r\n            case this.case3:\r\n                return new ShooterStrategyFactory(strategyType)\r\n            case this.case4:\r\n                return new BulletStrategyFactory(strategyType)\r\n\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n","import AbstractBotFactory from './abstractBotFactory'\r\nimport Command from './command'\r\nimport FormsFactory from './forms/formsFactory'\r\nimport BotStrategyFactory from './strategyFactories/abstractStrategyFactory'\r\n\r\nexport default class CommanderCreatingFacade {\r\n    constructor() {\r\n        this.Command = Command\r\n        this.FormsFactory = FormsFactory\r\n        this.BotFactory = AbstractBotFactory\r\n        this.formsFactory = new FormsFactory()\r\n        this.form1 = this.formsFactory.create('smallSquare')\r\n        this.form2 = this.formsFactory.create('bigSquare')\r\n        this.form3 = this.formsFactory.create('highLine')\r\n        this.botStategyFactory = new BotStrategyFactory()\r\n    }\r\n\r\n    createCommander() {\r\n        return new this.Command(\r\n            new this.BotFactory(),\r\n            new BotStrategyFactory(),\r\n            this.formsFactory.create('smallSquare'),\r\n            this.formsFactory.create('bigSquare'),\r\n            this.formsFactory.create('highLine')\r\n        )\r\n    }\r\n}\r\n","export default class BoosterDecorator {\r\n    constructor(bot) {\r\n        this.bot = bot\r\n        this.bot.interval -= 10\r\n    }\r\n}\r\n","//this is the Mediator Pattern implementation\r\n\r\nexport default class CollisionChecker {\r\n    returnResultOfChecking(\r\n        firstObjPosition,\r\n        firstObjSize,\r\n        secondObjPosition,\r\n        secondObjSize\r\n    ) {\r\n        if (\r\n            firstObjPosition[0] + firstObjSize[0] >= secondObjPosition[0] &&\r\n            firstObjPosition[0] <= secondObjPosition[0] + secondObjSize[0]\r\n        ) {\r\n            if (\r\n                firstObjPosition[1] + firstObjSize[1] >= secondObjPosition[1] &&\r\n                firstObjPosition[1] <= secondObjPosition[1] + secondObjSize[1]\r\n            ) {\r\n                return true\r\n            } else return false\r\n        } else return false\r\n    }\r\n}\r\n","import { useEffect } from 'react'\r\nimport {\r\n    boosterStatusAction,\r\n    botMoveAction,\r\n    botSizeInitAction,\r\n    bulletMoveAction,\r\n    bulletStateAction,\r\n    gameOverAction,\r\n    selectBotPosition,\r\n    selectGameOverStatus,\r\n    selectHeroPosition,\r\n} from '../redux/gameSlice'\r\nimport { useAppDispatch, useAppSelector } from '../app/hooks'\r\nimport BoosterDecorator from '../classes/bots/decorators/boosterDecorator'\r\nimport CollisionChecker from '../classes/collisionChecker'\r\nimport BotModel from '../components/BotModel'\r\n\r\nexport default function BotContainer(props) {\r\n    const bulletState = useAppSelector((state) => state.game.bulletState)\r\n\r\n    const gameOverStatus = useAppSelector(selectGameOverStatus)\r\n    const pauseStatus = useAppSelector((state) => state.game.pauseStatus)\r\n    const boosterStatus = useAppSelector((state) => state.game.boosterStatus)\r\n    const levelState = useAppSelector((state) => state.game.level)\r\n    const collisionChecker = new CollisionChecker()\r\n\r\n    const botSize = useAppSelector((state) => state.game.botSize)\r\n    const heroSize = useAppSelector((state) => state.game.heroSize)\r\n    let botXY = useAppSelector(selectBotPosition)\r\n    const heroXY = useAppSelector(selectHeroPosition)\r\n    const bulletXY = useAppSelector((state) => state.game.bulletPosition)\r\n\r\n    const bot = props.bot\r\n    const dispatch = useAppDispatch()\r\n\r\n    if ((bot.type === 'bullet') & !bulletState) {\r\n        botXY = bulletXY\r\n        bulletStateAction(true)\r\n    }\r\n\r\n    if (boosterStatus && levelState >= 0) {\r\n        const boosterBot = new BoosterDecorator(bot)\r\n        dispatch(boosterStatusAction(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(botSizeInitAction(bot.form))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!gameOverStatus && !pauseStatus) {\r\n            const interval = setInterval(() => {\r\n                bot.strategy.move(\r\n                    Math.random() * 10,\r\n                    moveBot,\r\n                    bot.moveLength,\r\n                    botXY,\r\n                    heroXY\r\n                )\r\n            }, bot.interval)\r\n            return () => clearInterval(interval)\r\n        }\r\n    }, [botXY])\r\n\r\n    useEffect(() => {\r\n        if (!gameOverStatus && !pauseStatus && bot.type === 'bullet') {\r\n            const interval = setInterval(() => {\r\n                //2 copies of interval => make 1 variable and put instead of this code\r\n\r\n                bot.strategy.move(\r\n                    Math.random() * 10,\r\n                    moveBot,\r\n                    bot.moveLength,\r\n                    botXY,\r\n                    heroXY\r\n                )\r\n            }, bot.interval)\r\n            return () => clearInterval(interval)\r\n        }\r\n    }, [botXY])\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            dispatch(bulletStateAction(false))\r\n        }, 2000)\r\n    }, [bulletState])\r\n\r\n    const moveBot = (xPosition, yPosition) => {\r\n        let newXPosition = xPosition\r\n        let newYPosition = yPosition\r\n        let xMax = window.screen.width\r\n        let yMax = window.screen.height\r\n\r\n        if (xPosition <= 0) {\r\n            newXPosition = 20\r\n        }\r\n        if (yPosition <= 40) {\r\n            newYPosition = 40\r\n        }\r\n        if (xPosition >= xMax - 60) {\r\n            newXPosition = xMax - 60\r\n        }\r\n        if (yPosition >= yMax - 140) {\r\n            newYPosition = yMax - 160\r\n        }\r\n        if (bot.type !== 'bullet') {\r\n            dispatch(botMoveAction([newXPosition, newYPosition]))\r\n        } else dispatch(bulletMoveAction([newXPosition, newYPosition]))\r\n    }\r\n\r\n    if (\r\n        collisionChecker.returnResultOfChecking(\r\n            heroXY,\r\n            heroSize,\r\n            botXY,\r\n            botSize\r\n        )\r\n    ) {\r\n        dispatch(gameOverAction(true))\r\n    }\r\n\r\n    // return <>{bot.returnComponent(botXY)}</>\r\n    return !bulletState ? (\r\n        <BotModel botXY={[...botXY]} form={bot.form} />\r\n    ) : (\r\n        <>\r\n            <BotModel botXY={[...botXY]} form={bot.form} />\r\n            <BotModel botXY={[...botXY]} form={bot.form} />\r\n        </>\r\n    )\r\n}\r\n","import { useAppSelector } from '../app/hooks'\r\nimport BossBuilder from '../classes/bots/bossBuilder'\r\nimport Facade from '../classes/bots/facade'\r\nimport FormsFactory from '../classes/bots/forms/formsFactory'\r\nimport BotContainer from './botContainer'\r\n\r\nexport default function Level1BotWrapper() {\r\n    const levelState = useAppSelector((state) => state.game.level)\r\n    const formsFactory = new FormsFactory() //abstract form factory init\r\n    const facade = new Facade(formsFactory) //Facade task - to hide all bot-production stages\r\n    const commander = facade.createCommander()\r\n    // const boss = new BossBuilder()\r\n    //     .formSmall()\r\n    //     .strategyNormal()\r\n    //     .actionTypeMover()\r\n    //     .createSimple()\r\n    // const boss2 = new BossBuilder()\r\n    //     .formBig()\r\n    //     .strategyNormal()\r\n    //     .actionTypeMover()\r\n    //     .createSimple()\r\n\r\n    const bot = commander.execute(levelState) //command pattern creates the bot based on levelState\r\n    // let BotContainer = <BotContainer bot={bot} />\r\n\r\n    // if (levelState >= 4 && levelState < 7) {\r\n    //     BotContainer = (\r\n    //         <>\r\n    //             <BotContainer bot={bot[0]} />\r\n    //             <BotContainer bot={bot[1]} />\r\n    //         </>\r\n    //     )\r\n    // }\r\n\r\n    // if (levelState === 7) {\r\n    //     BotContainer = (\r\n    //         <>\r\n    //             <BotContainer bot={boss} />\r\n    //         </>\r\n    //     )\r\n    // }\r\n\r\n    // return { BotContainer }\r\n\r\n    return <BotContainer bot={bot} />\r\n}\r\n","export default class SaveLoad {\r\n    constructor(state) {\r\n        this.state = state\r\n    }\r\n    save(state) {\r\n        localStorage.clear()\r\n        let i = 0\r\n        for (i in state) {\r\n            localStorage.setItem(i, state[i])\r\n        }\r\n        return new SaveLoad(state)\r\n    }\r\n    load() {\r\n        let obj = {}\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let key = localStorage.key(i)\r\n            let stringValue = localStorage.getItem(key)\r\n            let value = []\r\n            let resValue = stringValue\r\n            if (\r\n                key !== \"gameOverStatus\" &&\r\n                key !== \"pauseStatus\" &&\r\n                key !== \"saveStatus\" &&\r\n                key !== \"level\"\r\n            ) {\r\n                value = stringValue.split(\",\")\r\n                resValue = value.map(Number)\r\n            } else if (key === \"level\") {\r\n                resValue = +resValue[0]\r\n            } else {\r\n                resValue = stringValue === \"true\"\r\n            }\r\n            obj[key] = resValue\r\n        }\r\n        return obj\r\n    }\r\n}\r\n","import { useAppDispatch, useAppSelector } from \"../app/hooks\"\r\nimport SaveLoad from \"../classes/saveLoad\"\r\nimport {\r\n    botMoveAction,\r\n    loadStateAction,\r\n    pauseStatusAction,\r\n    saveAction,\r\n    selectBotPosition,\r\n} from \"../redux/gameSlice\"\r\nimport \"./../styles/gameStyles.css\"\r\n\r\nexport default function Header() {\r\n    let saveLoad = new SaveLoad()\r\n    const dispatch = useAppDispatch()\r\n    const state = useAppSelector((state) => state.game)\r\n    const botPosition = useAppSelector(selectBotPosition)\r\n    if (state.saveStatus) {\r\n        dispatch(saveAction(false))\r\n        saveLoad.save(state)\r\n    }\r\n\r\n    const load = () => {\r\n        let x = saveLoad.load()\r\n        dispatch(loadStateAction(x))\r\n    }\r\n\r\n    const play = () => {\r\n        const newBotPosition = [...botPosition]\r\n        newBotPosition[0] += 1 //it's because of useEffect dependency , for \"alive\" bot\r\n        dispatch(pauseStatusAction(false))\r\n        dispatch(botMoveAction(newBotPosition))\r\n    }\r\n    return (\r\n        <div className='header'>\r\n            <span style={{ color: \"whitesmoke\" }}>Level {state.level}</span>\r\n            <button\r\n                onClick={() => {\r\n                    dispatch(saveAction(true))\r\n                }}\r\n            >\r\n                Save\r\n            </button>\r\n            <button onClick={() => load()}>Load</button>\r\n            <button onClick={() => dispatch(pauseStatusAction(true))}>\r\n                Pause\r\n            </button>\r\n            <button onClick={() => play()}>Play</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport \"../styles/gameStyles.css\"\r\n\r\nfunction GameArea() {\r\n    return <div className='containerStyle' />\r\n}\r\n\r\nexport default React.memo(GameArea)\r\n","export default class Hero {\r\n    constructor(\r\n        position,\r\n        personName = \"Hero\",\r\n        xPosition = 0,\r\n        yPosition = 0,\r\n        level = 0,\r\n        moveLength = 20,\r\n        size = [40, 40]\r\n    ) {\r\n        this.personName = personName\r\n        this.xPosition = xPosition\r\n        this.yPosition = yPosition\r\n        this.size = size\r\n        this.moveLength = moveLength\r\n        this.level = level\r\n        this.color = \"white\"\r\n        this.borderWidth = 4\r\n    }\r\n\r\n    move = (keyCode, moveHero) => {\r\n        switch (keyCode) {\r\n            case 37:\r\n                this.xPosition -= this.moveLength\r\n                moveHero(this.xPosition, this.yPosition)\r\n                break\r\n            case 38:\r\n                this.yPosition -= this.moveLength\r\n                moveHero(this.xPosition, this.yPosition)\r\n                break\r\n            case 39:\r\n                this.xPosition += this.moveLength\r\n                moveHero(this.xPosition, this.yPosition)\r\n                break\r\n            case 40:\r\n                this.yPosition += this.moveLength\r\n                moveHero(this.xPosition, this.yPosition)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    getPose(x, y) {\r\n        this.xPosition = x\r\n        this.yPosition = y\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\"\r\nimport SaveLoad from \"../classes/saveLoad\"\r\nimport { botMoveAction, loadStateAction } from \"../redux/gameSlice\"\r\nimport \"./../styles/gameStyles.css\"\r\n\r\nfunction HeroModel(props) {\r\n    return (\r\n        <div\r\n            className='heroModelStyle'\r\n            style={{\r\n                top: props.heroXY[1],\r\n                left: props.heroXY[0],\r\n                width: props.heroSize[0],\r\n                height: props.heroSize[1],\r\n                borderInlineWidth: 4,\r\n            }}\r\n        ></div>\r\n    )\r\n}\r\n\r\nexport default React.memo(HeroModel)\r\n","import { useAppDispatch, useAppSelector } from \"../app/hooks\"\r\nimport { gameOverAction, loadStateAction } from \"../redux/gameSlice\"\r\nimport \"./../styles/gameStyles.css\"\r\nimport { initialState } from \"../redux/gameSlice\"\r\n\r\nexport default function GameOverModal() {\r\n    const dispatch = useAppDispatch()\r\n    const gameRestart = () => {\r\n        dispatch(gameOverAction(false))\r\n        dispatch(loadStateAction(initialState))\r\n    }\r\n    return (\r\n        <div className='modalContainer'>\r\n            <div className='modalContent'>Game over!</div>\r\n            <div>\r\n                <button className='modalButton' onClick={() => gameRestart()}>\r\n                    Try again!\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useCallback, useEffect, useRef } from \"react\"\r\nimport \"./../styles/gameStyles.css\"\r\nimport HeroModel from \"../components/HeroModel\"\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\"\r\nimport {\r\n    boosterStatusAction,\r\n    exitSetPositionAction,\r\n    gameOverAction,\r\n    heroMoveAction,\r\n    heroSizeInitAction,\r\n    keyForExitAction,\r\n    levelUpAction,\r\n    selectExitPosition,\r\n    selectGameOverStatus,\r\n    selectHeroPosition,\r\n} from \"../redux/gameSlice\"\r\nimport GameOverModal from \"../components/GameOverModal\"\r\n\r\nexport default function Game(props) {\r\n    const heroXY = useAppSelector(selectHeroPosition)\r\n    const keyPosition = useAppSelector((state) => state.game.keyPosition)\r\n    const exitPosition = useAppSelector(selectExitPosition)\r\n    const gameOverState = useAppSelector(selectGameOverStatus)\r\n    const boosterPosition = useAppSelector(\r\n        (state) => state.game.boosterPosition\r\n    )\r\n\r\n    const dispatch = useAppDispatch()\r\n    const newHero = props.newHero\r\n    dispatch(heroSizeInitAction(newHero.size))\r\n    const handleUserKeyPress = useCallback((event) => {\r\n        const { keyCode } = event\r\n        if (keyCode >= 37 && keyCode <= 40) {\r\n            newHero.move(keyCode, moveHero)\r\n        }\r\n    }, [])\r\n    window.addEventListener(\"keydown\", handleUserKeyPress)\r\n\r\n    const moveHero = (xPosition, yPosition) => {\r\n        let newXPosition = xPosition\r\n        let newYPosition = yPosition\r\n        let xMax = window.screen.width\r\n        let yMax = window.screen.height\r\n\r\n        if (xPosition <= 0) {\r\n            newXPosition = 20\r\n        }\r\n        if (yPosition <= 40) {\r\n            newYPosition = 40\r\n        }\r\n        if (xPosition >= xMax - 60) {\r\n            newXPosition = xMax - 60\r\n        }\r\n        if (yPosition >= yMax - 140) {\r\n            newYPosition = yMax - 160\r\n        }\r\n        dispatch(heroMoveAction([newXPosition, newYPosition]))\r\n        newHero.getPose(newXPosition, newYPosition)\r\n    }\r\n\r\n    // const gameOverSwitcher = (gameOverStatus) => {\r\n    //     dispatch(gameOverAction(false))\r\n    // }\r\n\r\n    return gameOverState ? (\r\n        <GameOverModal />\r\n    ) : (\r\n        <div>\r\n            <HeroModel heroXY={heroXY} heroSize={newHero.size} />\r\n        </div>\r\n    )\r\n}\r\n","import App from \"../App\"\r\nimport Hero from \"../classes/hero\"\r\nimport Game from \"./game\"\r\n\r\nexport default function HeroInit(props) {\r\n    const newHero = new Hero()\r\n    return (\r\n        <>\r\n            {/* <App /> */}\r\n            <Game newHero={newHero} />\r\n        </>\r\n    )\r\n}\r\n","import { useAppDispatch, useAppSelector } from '../app/hooks'\r\nimport CollisionChecker from '../classes/collisionChecker'\r\nimport {\r\n    boosterStatusAction,\r\n    exitSetPositionAction,\r\n    gameOverAction,\r\n    keyForExitAction,\r\n    levelUpAction,\r\n    selectBotPosition,\r\n    selectHeroPosition,\r\n} from '../redux/gameSlice'\r\n\r\nexport default function CollisionCheckerContainer() {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const heroSize = useAppSelector((state) => state.game.heroSize)\r\n    // const botXY = useAppSelector(selectBotPosition)\r\n    const heroXY = useAppSelector(selectHeroPosition)\r\n\r\n    const exitXY = useAppSelector((state) => state.game.exitPosition)\r\n    const keyXY = useAppSelector((state) => state.game.keyPosition)\r\n    const boosterXY = useAppSelector((state) => state.game.boosterPosition)\r\n    const itemSize = useAppSelector((state) => state.game.itemSize)\r\n\r\n    const collisionChecker = new CollisionChecker()\r\n    // let flag = false\r\n\r\n    if (\r\n        collisionChecker.returnResultOfChecking(\r\n            heroXY,\r\n            heroSize,\r\n            keyXY,\r\n            itemSize\r\n        )\r\n    ) {\r\n        dispatch(keyForExitAction(true))\r\n    }\r\n    if (\r\n        collisionChecker.returnResultOfChecking(\r\n            heroXY,\r\n            heroSize,\r\n            exitXY,\r\n            itemSize\r\n        )\r\n    ) {\r\n        console.log('LEVEL-UP')\r\n        console.log(heroXY, heroSize, exitXY, itemSize)\r\n        dispatch(levelUpAction())\r\n        dispatch(keyForExitAction(false))\r\n        dispatch(boosterStatusAction(false))\r\n        dispatch(exitSetPositionAction([900, 900]))\r\n        //item new position, otherwise auto level-up\r\n    }\r\n    if (\r\n        collisionChecker.returnResultOfChecking(\r\n            heroXY,\r\n            heroSize,\r\n            boosterXY,\r\n            itemSize\r\n        )\r\n    ) {\r\n        dispatch(boosterStatusAction(true))\r\n    }\r\n    // console.log(flag)\r\n\r\n    // switch (flag) {\r\n    //     case \"gameOver\":\r\n    //         dispatch(gameOverAction(false))\r\n    //         break\r\n    //     case \"keyFound\":\r\n    //         dispatch(keyForExitAction(true))\r\n    //         break\r\n    //     case \"exitFound\":\r\n    //         dispatch(levelUpAction())\r\n    //         dispatch(exitSetPositionAction([600, 600]))\r\n    //         dispatch(keyForExitAction(false))\r\n    //         dispatch(boosterStatusAction(false))\r\n    //         break\r\n    //     case \"boosterFound\":\r\n    //         dispatch(boosterStatusAction(true))\r\n    //         break\r\n    //     default:\r\n    //         return false\r\n    // }\r\n    return false\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport ItemInit from './containers/itemInit'\r\nimport Level1BotWrapper from './containers/botInit'\r\nimport { useAppSelector } from './app/hooks'\r\nimport Header from './components/Header'\r\nimport GameArea from './components/GameArea'\r\nimport HeroInit from './containers/heroInit'\r\nimport CollisionCheckerContainer from './containers/collisionCheckerContainer'\r\nimport MainMenu from './components/MainMenu'\r\n\r\nfunction App() {\r\n    const startStatus = useAppSelector((state) => state.game.startStatus)\r\n\r\n    // const levelState = useAppSelector(selectLevel)\r\n    // function renderSwitch(levelState) {\r\n    //     console.log(\"here\")\r\n    //     switch (levelState) {\r\n    //         case 1:\r\n    //             return <Level1BotWrapper />\r\n    //         case 2:\r\n    //             return <Level2BotWrapper />\r\n    //         default:\r\n    //             return false\r\n    //     }\r\n    // }\r\n    return (\r\n        // !startStatus ? (\r\n        //     <>\r\n        //         <MainMenu />\r\n        //         <GameArea />\r\n        //     </>\r\n        // ) :\r\n\r\n        <>\r\n            <Header />\r\n            <GameArea />\r\n            <HeroInit />\r\n            <ItemInit />\r\n            <Level1BotWrapper />\r\n            <CollisionCheckerContainer />\r\n            {/* {renderSwitch(levelState)} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport gameSlice from '../redux/gameSlice';\r\nimport { compose } from 'redux'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameSlice,\r\n  },\r\n});\r\n\r\ndeclare global {\r\n  interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// export type AppThunk<ReturnType = void> = ThunkAction<\r\n//   ReturnType,\r\n//   RootState,\r\n//   unknown,\r\n//   Action<string>\r\n// >;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}